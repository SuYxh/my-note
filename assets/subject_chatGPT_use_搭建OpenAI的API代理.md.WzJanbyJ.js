import{_ as a,c as s,o as e,V as i}from"./chunks/framework.hxTji2_l.js";const g=JSON.parse('{"title":"用Cloudflare Workers搭建OpenAI的API代理","description":"","frontmatter":{},"headers":[],"relativePath":"subject/chatGPT/use/搭建OpenAI的API代理.md","filePath":"subject/chatGPT/use/搭建OpenAI的API代理.md","lastUpdated":1718694746000}'),n={name:"subject/chatGPT/use/搭建OpenAI的API代理.md"},t=i(`<h1 id="用cloudflare-workers搭建openai的api代理" tabindex="-1">用Cloudflare Workers搭建OpenAI的API代理 <a class="header-anchor" href="#用cloudflare-workers搭建openai的api代理" aria-label="Permalink to &quot;用Cloudflare Workers搭建OpenAI的API代理&quot;">​</a></h1><p>本文介绍如何使用 Cloudflare Workers 作为代理来访问 OpenAI 的 API，这种方法适用于需要在国内环境下访问 OpenAI 的场景。借助 Cloudflare 的免费服务，您几乎可以实现零成本的代理解决方案。</p><h3 id="背景知识" tabindex="-1">背景知识 <a class="header-anchor" href="#背景知识" aria-label="Permalink to &quot;背景知识&quot;">​</a></h3><p>Cloudflare Workers 提供了一个轻量级的服务器环境，允许您在 Cloudflare 的全球网络上运行 JavaScript 代码。每天有 10 万次的免费请求额度，这对于个人或小型项目来说是足够的。此外，您还可以免费注册域名，并将其用于代理服务。</p><h3 id="实现思路" tabindex="-1">实现思路 <a class="header-anchor" href="#实现思路" aria-label="Permalink to &quot;实现思路&quot;">​</a></h3><p>主要思路是使用 Cloudflare Workers 来代理 OpenAI 的 API 地址，然后配合自己的域名，从而在国内实现对 OpenAI API 的访问。理论上，这种方法支持所有被认证的网站，而不仅限于 OpenAI。</p><p>如果您之前没有使用过 Cloudflare，可以访问官网 <a href="https://www.cloudflare-cn.com/" target="_blank" rel="noreferrer">www.cloudflare-cn.com</a> 进行了解。本文将重点介绍如何使用 Cloudflare 的 Workers 实现 OpenAI API 的代理。</p><h3 id="提前准备内容" tabindex="-1">提前准备内容 <a class="header-anchor" href="#提前准备内容" aria-label="Permalink to &quot;提前准备内容&quot;">​</a></h3><ol><li><p>一个域名（建议直接<a href="https://link.juejin.cn/?target=https%3A%2F%2Fwanwang.aliyun.com%2F" target="_blank" rel="noreferrer">阿里云</a>或者<a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.xinnet.com%2F" target="_blank" rel="noreferrer">新网</a>买一个好了，很多域名一年只需要10块）；</p><blockquote><p>域名买了以后不用备案也可以用</p></blockquote></li><li><p>一个 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.cloudflare.com%2Fzh-cn%2F" target="_blank" rel="noreferrer">Cloudflare</a> 账号，具体注册细节就不多说了，网址： <a href="https://dash.cloudflare.com/sign-up" target="_blank" rel="noreferrer">https://dash.cloudflare.com/sign-up</a></p></li></ol><h3 id="实现步骤" tabindex="-1">实现步骤 <a class="header-anchor" href="#实现步骤" aria-label="Permalink to &quot;实现步骤&quot;">​</a></h3><h4 id="添加站点" tabindex="-1">添加站点 <a class="header-anchor" href="#添加站点" aria-label="Permalink to &quot;添加站点&quot;">​</a></h4><blockquote><p>因为后续我们在创建 worker 后绑定自定义域名的时候，这个域名需要在 cloudflare 处于激活状态，才可以绑定，当然你也可以直接在 cloudflare 购买域名，就可以直接跳过这一步</p></blockquote><p><img src="https://qn.huat.xyz/mac/202404011335770.png" alt="image-20240401133544748"></p><p><img src="https://qn.huat.xyz/mac/202404011336895.png" alt="image-20240401133641870"></p><p>您操作完成后，看到的应该是这样：</p><p><img src="https://qn.huat.xyz/mac/202404011337703.png" alt="image-20240401133756678"></p><h4 id="修改域名-dns【重要】" tabindex="-1">修改域名 DNS【重要】 <a class="header-anchor" href="#修改域名-dns【重要】" aria-label="Permalink to &quot;修改域名 DNS【重要】&quot;">​</a></h4><p>以我在阿里云买的域名为例【假设你已经购买了域名，域名选购地址： <a href="https://wanwang.aliyun.com/domain%E3%80%91" target="_blank" rel="noreferrer">https://wanwang.aliyun.com/domain】</a></p><p>找到域名列表 <a href="https://dc.console.aliyun.com/next/index" target="_blank" rel="noreferrer">https://dc.console.aliyun.com/next/index</a></p><p><img src="https://qn.huat.xyz/mac/202404011340259.png" alt="image-20240401134035224"></p><p>点击购买的的域名</p><p><img src="https://qn.huat.xyz/mac/202404011342561.png" alt="image-20240401134226511"></p><p>点击 修改 DNS</p><p><img src="https://qn.huat.xyz/mac/202404011343296.png" alt="image-20240401134310250"></p><p>将 DNS 修改为 cloudflare 提供的 DNS， 然后需要等等，大概一两小时吧，成功后 cloudflare 会给你发邮件。</p><p><img src="https://qn.huat.xyz/mac/202404011347391.png" alt="image-20240401134745355"></p><h4 id="创建-worker" tabindex="-1">创建 worker <a class="header-anchor" href="#创建-worker" aria-label="Permalink to &quot;创建 worker&quot;">​</a></h4><p><img src="https://qn.huat.xyz/mac/202404011349913.png" alt="image-20240401134907866"></p><blockquote><p>我这边是已经创建了 2 个</p></blockquote><p><img src="https://qn.huat.xyz/mac/202404011350082.png" alt="image-20240401135026029"></p><p><img src="https://qn.huat.xyz/mac/202404011351554.png" alt="image-20240401135113496"></p><p>直接点部署，worker.js 的代码一会在修改。</p><h4 id="编辑-worker-js" tabindex="-1">编辑 <code>worker.js</code> <a class="header-anchor" href="#编辑-worker-js" aria-label="Permalink to &quot;编辑 \`worker.js\`&quot;">​</a></h4><p>上传创建完成后可以看到这个按钮：</p><p><img src="https://qn.huat.xyz/mac/202404011352267.png" alt="image-20240401135237210"></p><p>或者 点击这里</p><p><img src="https://qn.huat.xyz/mac/202404011354861.png" alt="image-20240401135401802"></p><p><img src="https://qn.huat.xyz/mac/202404011354545.png" alt="image-20240401135450481"></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handleRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(request.url);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  url.host </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;api.openai.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(url, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    headers: request.headers,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    method: request.method,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    body: request.body,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fetch&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  event.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondWith</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handleRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event.request));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="配置自定义域名" tabindex="-1">配置自定义域名 <a class="header-anchor" href="#配置自定义域名" aria-label="Permalink to &quot;配置自定义域名&quot;">​</a></h4><p><img src="https://qn.huat.xyz/mac/202404011356352.png" alt="image-20240401135621297"></p><p><img src="https://qn.huat.xyz/mac/202404011357640.png" alt="image-20240401135706590"></p><p>这个域名是你刚刚建立网站的域名，你写了 <code>proxy.xxx.com</code> 后，cloudflare 会自动去帮你添加一个解析。</p><p>⚠️注意：这个域名需要等待cloudflare确认激活成功后，才可以进行绑定。</p><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>至此便大功告成。等待片刻，应该就可以通过你自己的域名来代替 OpenAI 的 API 地址了，比如在本文的例子中，想要请求 ChatGPT 的 API ，即是把官方 API 地址 <code>https://api.openai.com/v1/chat/completions</code> 换为你自己的域名 <code>https://xxxx.com/v1/chat/completions</code> ，其他参数均参照官方示例即可。由于 Cloudflare 有每天免费 10 万次的请求额度，所以轻度使用基本是零成本的，当然如果公司使用为了增加并发请求，也可以为此付费。</p>`,46),l=[t];function p(r,h,o,c,k,d){return e(),s("div",null,l)}const m=a(n,[["render",p]]);export{g as __pageData,m as default};
