import{_ as s,o as a,c as l,Q as n}from"./chunks/framework.fb3766a7.js";const b=JSON.parse('{"title":"lib.d.ts 和 global.d.ts","description":"","frontmatter":{},"headers":[],"relativePath":"fe/typescript/advance/lib_d_ts和global_d_ts.md","lastUpdated":1707358331000}'),p={name:"fe/typescript/advance/lib_d_ts和global_d_ts.md"},e=n(`<h1 id="lib-d-ts-和-global-d-ts" tabindex="-1">lib.d.ts 和 global.d.ts <a class="header-anchor" href="#lib-d-ts-和-global-d-ts" aria-label="Permalink to &quot;lib.d.ts 和 global.d.ts&quot;">​</a></h1><h2 id="lib-d-ts" tabindex="-1">lib.d.ts <a class="header-anchor" href="#lib-d-ts" aria-label="Permalink to &quot;lib.d.ts&quot;">​</a></h2><p>当你安装 TypeScript 时，会顺带安装一个 lib.d.ts 声明文件。这个文件包含 JavaScript 运行时以及 DOM 中存在各种常见的环境声明。</p><p>当我们使用一些原生 JS 操作的时候，也会拥有类型，代码如下：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> body</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">HTMLBodyElement</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">null</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">body</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> date</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Date</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这里的<code>HTMLBodyElement</code>和<code>Date</code>都是 TypeScript 下自带的一些内置类型，这些类型都存放在 lib 这个文件夹下。</p><p><img src="https://qn.huat.xyz/mac/202310292154614.png" alt="09-01-lib.d.ts"></p><h2 id="global-d-ts" tabindex="-1">global.d.ts <a class="header-anchor" href="#global-d-ts" aria-label="Permalink to &quot;global.d.ts&quot;">​</a></h2><p>有时候我们也想扩展像 lib.d.ts 这样的声明类型，可以在全局下进行使用，所以 TS 给我们提供了 global.d.ts 文件使用方式，这个文件中定义的类型都是可以直接在全局下进行使用的，不需要模块导入。</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// global.d.ts</span></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">A</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 1_demo.ts</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> a</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">A</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// ✔</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> b</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">A</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">123</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// ✖</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,11),o=[e];function t(c,r,i,y,d,D){return a(),l("div",null,o)}const F=s(p,[["render",t]]);export{b as __pageData,F as default};
