import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.03641bbc.js";const F=JSON.parse('{"title":"Node CJS 和 ESM 混合开发","description":"","frontmatter":{},"headers":[],"relativePath":"workflow/cli/第6章/02-Node CJS和ESM混合开发.md","lastUpdated":1701246730000}'),e={name:"workflow/cli/第6章/02-Node CJS和ESM混合开发.md"},o=l(`<h1 id="node-cjs-和-esm-混合开发" tabindex="-1">Node CJS 和 ESM 混合开发 <a class="header-anchor" href="#node-cjs-和-esm-混合开发" aria-label="Permalink to &quot;Node CJS 和 ESM 混合开发&quot;">​</a></h1><h2 id="为什么会存在-cjs-和-esm-混合开发" tabindex="-1">为什么会存在 CJS 和 ESM 混合开发？ <a class="header-anchor" href="#为什么会存在-cjs-和-esm-混合开发" aria-label="Permalink to &quot;为什么会存在 CJS 和 ESM 混合开发？&quot;">​</a></h2><p>npm 模块有的使用 CJS 有的使用 ESM，导致 CJS 和 ESM 混合开发成为 Node 项目必须考虑的问题</p><h2 id="场景-1-commonjs-单独使用" tabindex="-1">场景 1：CommonJS 单独使用 <a class="header-anchor" href="#场景-1-commonjs-单独使用" aria-label="Permalink to &quot;场景 1：CommonJS 单独使用&quot;">​</a></h2><p>CJS 文件定义方法：</p><ul><li>默认 .js 后缀的文件为 CJS。</li><li>.cjs 后缀的文件强制为 CJS。</li><li>package.json 中 type=&quot;commonjs&quot; 时，.js 文件会被认为是 CJS。</li></ul><blockquote><p>踩坑：module.exports 和 exports.fn 混用问题</p></blockquote><h2 id="场景-2-esm-单独使用" tabindex="-1">场景 2：ESM 单独使用 <a class="header-anchor" href="#场景-2-esm-单独使用" aria-label="Permalink to &quot;场景 2：ESM 单独使用&quot;">​</a></h2><p>ESM 文件定义方法：</p><ul><li>package.json 中 type=&quot;module&quot; 时，.js 后缀文件会被识别为 ESM。</li><li>.mjs 后缀的文件会被强制识别为 ESM。</li></ul><blockquote><p>踩坑：**filename, **dirname 无法使用，<a href="https://www.npmjs.com/package/dirname-filename-esm" target="_blank" rel="noreferrer">解决方案</a></p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// In &quot;.mjs&quot; script or a script under &quot;type&quot;: &quot;module&quot; package</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">dirname</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">filename</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dirname-filename-esm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> __dirname </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">dirname</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">meta)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> __filename </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">filename</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">meta)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Use __dirname and __filename like under commonjs module</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="场景-3-commonjs-和-esm-混用" tabindex="-1">场景 3：CommonJS 和 ESM 混用 <a class="header-anchor" href="#场景-3-commonjs-和-esm-混用" aria-label="Permalink to &quot;场景 3：CommonJS 和 ESM 混用&quot;">​</a></h2><p>原则：</p><ul><li>单个模块必须指定 CommonJS 和 ESM，不可混用，如果混用，必须使用 webpack 或者 babel 进行解决</li><li>package.json 的 type 必须指定一种模块，如果不指定默认为 commonjs，但越来越多的模块采用 module（ESM）</li></ul><h3 id="场景-3-1-commonjs-兼容-esm" tabindex="-1">场景 3.1：CommonJS 兼容 ESM <a class="header-anchor" href="#场景-3-1-commonjs-兼容-esm" aria-label="Permalink to &quot;场景 3.1：CommonJS 兼容 ESM&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">esm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">b</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">a</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">b</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="场景-3-2-esm-兼容-commonjs" tabindex="-1">场景 3.2：ESM 兼容 CommonJS <a class="header-anchor" href="#场景-3-2-esm-兼容-commonjs" aria-label="Permalink to &quot;场景 3.2：ESM 兼容 CommonJS&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">b</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cjs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">a</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">b</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="常见错误" tabindex="-1">常见错误 <a class="header-anchor" href="#常见错误" aria-label="Permalink to &quot;常见错误&quot;">​</a></h2><h3 id="错误-1-type-和语法不匹配" tabindex="-1">错误 1：type 和语法不匹配 <a class="header-anchor" href="#错误-1-type-和语法不匹配" aria-label="Permalink to &quot;错误 1：type 和语法不匹配&quot;">​</a></h3><p>常见错误：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">node</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">packages/esm_entry/</span></span>
<span class="line"><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">node:16435</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> Warning: To load an ES module, set </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">module</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> the package.json or use the .mjs extension.</span></span>
<span class="line"><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Use</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">node</span><span style="color:#C3E88D;"> --trace-warnings ...</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">show</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">where</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">warning</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">was</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">created</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">/Users/sam/Desktop/fe_arch_source_code/imooc-test/module/packages/esm_entry/lib/index.js:1</span></span>
<span class="line"><span style="color:#FFCB6B;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cjs</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cjs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">^^^^^^</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">SyntaxError:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Cannot</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">use</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">statement</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">outside</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">a</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">module</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>错误原因：</p><ul><li>未指定 package.json 的 type，默认采用 commonjs</li><li>js 源码中使用了 ESM 语法，如 import 或 export 等</li></ul><p>解决方案：</p><ul><li>修改 js 为 mjs（不建议使用）</li><li>修改 type 为 module</li></ul><h3 id="错误-2-require-无法加载-esm-模块" tabindex="-1">错误 2：require 无法加载 ESM 模块 <a class="header-anchor" href="#错误-2-require-无法加载-esm-模块" aria-label="Permalink to &quot;错误 2：require 无法加载 ESM 模块&quot;">​</a></h3><p>使用 require 加载 ESM 模块会出现报错：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">internal/modules/cjs/loader.js:1102</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#FFCB6B;">throw</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ERR_REQUIRE_ESM</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">filename,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">parentPath,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">packageJsonPath</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#FFCB6B;">^</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Error</span><span style="color:#A6ACCD;"> [ERR_REQUIRE_ESM]: Must use import to load ES Module: /Users/sam/Desktop/fe_arch_source_code/imooc-test/module/packages/esm/lib/index.js</span></span>
<span class="line"><span style="color:#82AAFF;">require</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> of ES modules is not supported.</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>解决方案：使用 import 方法加载</p><h3 id="错误-3-esm-模块加载其他模块问题" tabindex="-1">错误 3：ESM 模块加载其他模块问题 <a class="header-anchor" href="#错误-3-esm-模块加载其他模块问题" aria-label="Permalink to &quot;错误 3：ESM 模块加载其他模块问题&quot;">​</a></h3><p>使用以下代码：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>会出现报错：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">internal/process/esm_loader.js:74</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">internalBinding(</span><span style="color:#FFCB6B;">&#39;errors&#39;</span><span style="color:#A6ACCD;">).triggerUncaughtException</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">                              </span><span style="color:#FFCB6B;">^</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Error</span><span style="color:#A6ACCD;"> [ERR_MODULE_NOT_FOUND]: Cannot find module </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/Users/sam/Desktop/fe_arch_source_code/imooc-test/module/packages/esm/lib/a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> imported from /Users/sam/Desktop/fe_arch_source_code/imooc-test/module/packages/esm/lib/index.js</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>解决方案：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./a.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,38),p=[o];function r(t,c,i,y,D,C){return a(),n("div",null,p)}const u=s(e,[["render",r]]);export{F as __pageData,u as default};
