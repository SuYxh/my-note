import{_ as e,c as o,o as c,V as d}from"./chunks/framework.hxTji2_l.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"fe/css/CSS属性书写排序.md","filePath":"fe/css/CSS属性书写排序.md","lastUpdated":1718603374000}'),i={name:"fe/css/CSS属性书写排序.md"},t=d('<p>曾经有一个著名的网站<a href="https://css-tricks.com" target="_blank" rel="noreferrer">CSSTricks</a>做了一份属性排序的<a href="https://css-tricks.com/poll-results-how-do-you-order-your-css-properties" target="_blank" rel="noreferrer">调查问卷</a>，调查结果如下。</p><p><img src="https://qn.huat.xyz/mac/202406121319779.awebp" alt="调查问卷"></p><ul><li><strong>A</strong>：随意排序占<code>39%</code></li><li><strong>B</strong>：根据类型排序占<code>45%</code></li><li><strong>C</strong>：根据单行代码长度排序占<code>2%</code></li><li><strong>D</strong>：根据属性字母排序占<code>14%</code></li></ul><p>其实属性排序有很多优点。</p><ul><li>突出<code>CSS艺术之美</code></li><li>防止属性重复编写</li><li>快速定位到问题代码</li><li>锻炼无视图架构网页的能力</li><li>快速在脑海中构思排版与布局</li><li>提高代码的可读性与可维护性</li></ul><p>很多开发者都会给属性做排序，可见大家对属性排序都是持有肯定的态度，只在排序方式中会有一定的分歧。<code>根据长度排序</code>与<code>根据字母排序</code>是较简单易用的排序方式，但忽略了属性间的关联性。<code>根据类型排序</code>又会分为很多种，主要还是围绕着<code>盒模型</code>。</p><ul><li><strong>根据类型排序</strong></li><li><strong>根据长度排序</strong></li><li><strong>根据字母排序</strong></li></ul><p>属性排序并不会影响样式的功能与性能，只是让代码看起来更简洁更规范。</p><h3 id="理解" tabindex="-1">理解 <a class="header-anchor" href="#理解" aria-label="Permalink to &quot;理解&quot;">​</a></h3><p>若编写一个节点样式，先声明<code>display</code>还是<code>width</code>？<code>display</code>决定了该节点的开始状态，是<code>none</code>，还是<code>block</code>，还是<code>inline</code>，还是其他。若先声明<code>width</code>，万一后续声明<code>display:inline</code>表示该节点是行内元素，行内元素无法显式声明宽高，那<code>width</code>不是白白浪费了？所以推荐声明<code>display</code>在首位，毕竟它声明了该节点最开始的状态：<code>有还是无</code>。</p><h3 id="排序" tabindex="-1">排序 <a class="header-anchor" href="#排序" aria-label="Permalink to &quot;排序&quot;">​</a></h3><p>因此，我将属性排序根据<code>布局 → 尺寸 → 界面 → 文字 → 交互</code>的方式顺序定义。把交互属性放到后面是因为<code>transform</code>与<code>animation</code>会让节点重新生成新图层，新图层不会对其他图层造成影响。</p><h4 id="布局属性" tabindex="-1">布局属性 <a class="header-anchor" href="#布局属性" aria-label="Permalink to &quot;布局属性&quot;">​</a></h4><ul><li>显示：<code>display</code>、<code>visibility</code></li><li>溢出：<code>overflow</code>、<code>overflow-x</code>、<code>overflow-y</code>、<code>scroll-behavior</code>、<code>scroll-snap-align</code></li><li>浮动：<code>float</code>、<code>clear</code></li><li>定位：<code>position</code>、<code>left</code>、<code>right</code>、<code>top</code>、<code>bottom</code>、<code>z-index</code></li><li>列表：<code>list-style</code>、<code>list-style-type</code>、<code>list-style-position</code>、<code>list-style-image</code></li><li>表格：<code>table-layout</code>、<code>border-collapse</code>、<code>border-spacing</code>、<code>caption-side</code>、<code>empty-cells</code></li><li>弹性：<code>flex-flow</code>、<code>flex-direction</code>、<code>flex-wrap</code>、<code>justify-content</code>、<code>align-content</code>、<code>align-items</code>、<code>align-self</code>、<code>flex</code>、<code>flex-grow</code>、<code>flex-shrink</code>、<code>flex-basis</code>、<code>order</code></li><li>多列：<code>columns</code>、<code>column-width</code>、<code>column-count</code>、<code>column-gap</code>、<code>column-rule</code>、<code>column-rule-width</code>、<code>column-rule-style</code>、<code>column-rule-color</code>、<code>column-span</code>、<code>column-fill</code>、<code>column-break-before</code>、<code>column-break-after</code>、<code>column-break-inside</code></li><li>格栅：<code>grid-columns</code>、<code>grid-rows</code></li></ul><h4 id="尺寸属性" tabindex="-1">尺寸属性 <a class="header-anchor" href="#尺寸属性" aria-label="Permalink to &quot;尺寸属性&quot;">​</a></h4><ul><li>模型：<code>box-sizing</code></li><li>边距：<code>margin</code>、<code>margin-left</code>、<code>margin-right</code>、<code>margin-top</code>、<code>margin-bottom</code></li><li>填充：<code>padding</code>、<code>padding-left</code>、<code>padding-right</code>、<code>padding-top</code>、<code>padding-bottom</code></li><li>边框：<code>border</code>、<code>border-width</code>、<code>border-style</code>、<code>border-color</code>、<code>border-colors</code>、<code>border-&lt;direction&gt;-&lt;param&gt;</code></li><li>圆角：<code>border-radius</code>、<code>border-top-left-radius</code>、<code>border-top-right-radius</code>、<code>border-bottom-left-radius</code>、<code>border-bottom-right-radius</code></li><li>框图：<code>border-image</code>、<code>border-image-source</code>、<code>border-image-slice</code>、<code>border-image-width</code>、<code>border-image-outset</code>、<code>border-image-repeat</code></li><li>大小：<code>width</code>、<code>min-width</code>、<code>max-width</code>、<code>height</code>、<code>min-height</code>、<code>max-height</code></li></ul><h4 id="界面属性" tabindex="-1">界面属性 <a class="header-anchor" href="#界面属性" aria-label="Permalink to &quot;界面属性&quot;">​</a></h4><ul><li>外观：<code>appearance</code></li><li>轮廓：<code>outline</code>、<code>outline-width</code>、<code>outline-style</code>、<code>outline-color</code>、<code>outline-offset</code>、<code>outline-radius</code>、<code>outline-radius-&lt;direction&gt;</code></li><li>背景：<code>background</code>、<code>background-color</code>、<code>background-image</code>、<code>background-repeat</code>、<code>background-repeat-x</code>、<code>background-repeat-y</code>、<code>background-position</code>、<code>background-position-x</code>、<code>background-position-y</code>、<code>background-size</code>、<code>background-origin</code>、<code>background-clip</code>、<code>background-attachment</code>、<code>bakground-composite</code></li><li>遮罩：<code>mask</code>、<code>mask-mode</code>、<code>mask-image</code>、<code>mask-repeat</code>、<code>mask-repeat-x</code>、<code>mask-repeat-y</code>、<code>mask-position</code>、<code>mask-position-x</code>、<code>mask-position-y</code>、<code>mask-size</code>、<code>mask-origin</code>、<code>mask-clip</code>、<code>mask-attachment</code>、<code>mask-composite</code>、<code>mask-box-image</code>、<code>mask-box-image-source</code>、<code>mask-box-image-width</code>、<code>mask-box-image-outset</code>、<code>mask-box-image-repeat</code>、<code>mask-box-image-slice</code></li><li>滤镜：<code>box-shadow</code>、<code>box-reflect</code>、<code>backdrop-filter</code>、<code>mix-blend-mode</code>、<code>filter</code>、<code>opacity</code></li><li>裁剪：<code>object-fit</code>、<code>clip</code>、<code>clip-path</code></li><li>事件：<code>resize</code>、<code>zoom</code>、<code>cursor</code>、<code>pointer-events</code>、<code>touch-callout</code>、<code>user-modify</code>、<code>user-focus</code>、<code>user-input</code>、<code>user-select</code>、<code>user-drag</code></li></ul><h4 id="文字属性" tabindex="-1">文字属性 <a class="header-anchor" href="#文字属性" aria-label="Permalink to &quot;文字属性&quot;">​</a></h4><ul><li>模式：<code>line-height</code>、<code>line-clamp</code>、<code>vertical-align</code>、<code>direction</code>、<code>unicode-bidi</code>、<code>writing-mode</code>、<code>ime-mode</code></li><li>文本：<code>text-overflow</code>、<code>text-decoration</code>、<code>text-decoration-line</code>、<code>text-decoration-style</code>、<code>text-decoration-color</code>、<code>text-decoration-skip</code>、<code>text-underline-position</code>、<code>text-align</code>、<code>text-align-last</code>、<code>text-justify</code>、<code>text-indent</code>、<code>text-stroke</code>、<code>text-stroke-width</code>、<code>text-stroke-color</code>、<code>text-shadow</code>、<code>text-transform</code>、<code>text-size-adjust</code></li><li>字体：<code>src</code>、<code>font</code>、<code>font-family</code>、<code>font-style</code>、<code>font-stretch</code>、<code>font-weight</code>、<code>font-variant</code>、<code>font-size</code>、<code>font-size-adjust</code>、<code>color</code></li><li>内容：<code>tab-size</code>、<code>overflow-wrap</code>、<code>word-wrap</code>、<code>word-break</code>、<code>word-spacing</code>、<code>letter-spacing</code>、<code>white-space</code>、<code>caret-color</code>、<code>quotes</code>、<code>content</code>、<code>content-visibility</code>、<code>counter-reset</code>、<code>counter-increment</code>、<code>page</code>、<code>page-break-before</code>、<code>page-break-after</code>、<code>page-break-inside</code></li></ul><h4 id="交互属性" tabindex="-1">交互属性 <a class="header-anchor" href="#交互属性" aria-label="Permalink to &quot;交互属性&quot;">​</a></h4><ul><li>模式：<code>will-change</code>、<code>perspective</code>、<code>perspective-origin</code>、<code>backface-visibility</code></li><li>变换：<code>transform</code>、<code>transform-origin</code>、<code>transform-style</code></li><li>过渡：<code>transition</code>、<code>transition-property</code>、<code>transition-duration</code>、<code>transition-timing-function</code>、<code>transition-delay</code></li><li>动画：<code>animation</code>、<code>animation-name</code>、<code>animation-duration</code>、<code>animation-timing-function</code>、<code>animation-delay</code>、<code>animation-iteration-count</code>、<code>animation-direction</code>、<code>animation-play-state</code>、<code>animation-fill-mode</code></li></ul>',22),a=[t];function r(l,n,s,m,u,p){return c(),o("div",null,a)}const h=e(i,[["render",r]]);export{b as __pageData,h as default};
