import{_ as e,o as a,c as s,Q as o}from"./chunks/framework.fb3766a7.js";const b=JSON.parse('{"title":"从使用角度理解什么是脚手架？","description":"","frontmatter":{},"headers":[],"relativePath":"workflow/cli/第1章/04-从使用角度理解什么是脚手架.md","lastUpdated":1706873516000}'),l={name:"workflow/cli/第1章/04-从使用角度理解什么是脚手架.md"},c=o(`<h1 id="从使用角度理解什么是脚手架" tabindex="-1">从使用角度理解什么是脚手架？ <a class="header-anchor" href="#从使用角度理解什么是脚手架" aria-label="Permalink to &quot;从使用角度理解什么是脚手架？&quot;">​</a></h1><h2 id="脚手架简介" tabindex="-1">脚手架简介 <a class="header-anchor" href="#脚手架简介" aria-label="Permalink to &quot;脚手架简介&quot;">​</a></h2><p>脚手架本质是一个操作系统的客户端，它通过命令行执行，比如：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">vue</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">create</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">vue-test-app</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>上面这条命令由 3 个部分组成：</p><ul><li>主命令: <code>vue</code></li><li>command: <code>create</code></li><li>command 的 param: <code>vue-test-app</code></li></ul><p>它表示创建一个 vue 项目，项目的名称为 <code>vue-test-app</code>，以上是最一个较为简单的脚手架命令，但实际场景往往更加复杂，比如：</p><p>当前目录已经有文件了，我们需要覆盖当前目录下的文件，强制进行安装 <code>vue</code> 项目，此时我们就可以输入：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">vue</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">create</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">vue-test-app</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--force</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这里的 <code>--force</code> 叫做 option，用来辅助脚手架确认在特定场景下用户的选择（可以理解为配置）。还有一种场景：</p><p>通过 <code>vue create</code> 创建项目时，会自动执行 <code>npm install</code> 帮用户安装依赖，如果我们希望使用淘宝源来安装，可以输入命令：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">vue</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">create</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">vue-test-app</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--force</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-r</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">https://registry.npm.taobao.org</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这里的 <code>-r</code> 也叫做 option，它与 <code>--force</code> 不同的是它使用 <code>-</code>，并且使用简写，这里的 <code>-r</code> 也可以替换成 <code>--registry</code>，有的同学可能要问，为什么老师知道这个命令，其实我们输入下面的命令就可以看到 <code>vue create</code> 支持的所有 options：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">vue</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">create</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--help</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>-r https://registry.npm.taobao.org</code> 后面的 <code>https://registry.npm.taobao.org</code> 成为 option 的 param，其实 <code>--force</code> 可以理解为：<code>--force true</code>，简写为：<code>--force</code> 或 <code>-f</code></p><h2 id="脚手架的执行原理" tabindex="-1">脚手架的执行原理 <a class="header-anchor" href="#脚手架的执行原理" aria-label="Permalink to &quot;脚手架的执行原理&quot;">​</a></h2><p><img src="https://qn.huat.xyz/mac/202309011123574.png" alt="w2-c1-cli_work"></p><p>脚手架的执行原理如下：</p><ul><li>在终端输入 <code>vue create vue-test-app</code></li><li>终端解析出 <code>vue</code> 命令</li><li>终端在环境变量中找到 <code>vue</code> 命令</li><li>终端根据 <code>vue</code> 命令链接到实际文件 <code>vue.js</code></li><li>终端利用 <code>node</code> 执行 <code>vue.js</code></li><li><code>vue.js</code> 解析 command / options</li><li><code>vue.js</code> 执行 command</li><li>执行完毕，退出执行</li></ul><h2 id="从应用的角度看如何开发一个脚手架" tabindex="-1">从应用的角度看如何开发一个脚手架 <a class="header-anchor" href="#从应用的角度看如何开发一个脚手架" aria-label="Permalink to &quot;从应用的角度看如何开发一个脚手架&quot;">​</a></h2><blockquote><p>这里以 <code>vue-cli</code> 为例</p></blockquote><ul><li>开发 <code>npm</code> 项目，该项目中应包含一个 <code>bin/vue.js</code> 文件，并将这个项目发布到 <code>npm</code></li><li>将 <code>npm</code> 项目安装到 <code>node</code> 的 <code>lib/node_modules</code></li><li>在 <code>node</code> 的 <code>bin</code> 目录下配置 <code>vue</code> 软链接指向 <code>lib/node_modules/@vue/cli/bin/vue.js</code></li></ul><p>这样我们在执行 <code>vue</code> 命令的时候就可以找到 <code>vue.js</code> 进行执行</p><h2 id="还有很多疑问需要解答" tabindex="-1">还有很多疑问需要解答 <a class="header-anchor" href="#还有很多疑问需要解答" aria-label="Permalink to &quot;还有很多疑问需要解答&quot;">​</a></h2><ul><li>为什么全局安装 <code>@vue/cli</code> 后会添加的命令为 <code>vue</code>？</li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">@vue/cli</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><p>全局安装 <code>@vue/cli</code> 时发生了什么？</p></li><li><p>为什么 <code>vue</code> 指向一个 <code>js</code> 文件，我们却可以直接通过 <code>vue</code> 命令直接去执行它？</p></li></ul>`,27),n=[c];function p(d,t,i,r,u,h){return a(),s("div",null,n)}const v=e(l,[["render",p]]);export{b as __pageData,v as default};
