import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.fb3766a7.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"buildTools/vite/迁移vite.md","lastUpdated":1707358331000}'),p={name:"buildTools/vite/迁移vite.md"},e=l(`<h2 id="迁移-vite" tabindex="-1">迁移 vite <a class="header-anchor" href="#迁移-vite" aria-label="Permalink to &quot;迁移 vite&quot;">​</a></h2><p>最主要原因就是本地开发启动速度快。在使用 vite 之前，特地先使用了 <a href="https://github.com/stephencookdev/speed-measure-webpack-plugin" target="_blank" rel="noreferrer">speed-measure-webpack-plugin</a> 这个插件来检测 webpack 的打包速度，结果是需要 15s - 20s。 相比之下，在切换 vite 之后，几乎就是秒启动</p><p><img src="https://qn.huat.xyz/mac/202402071132025.awebp" alt=""></p><p>当然也有一个弊端：<strong>开发环境的首屏渲染、懒加载相比 webpack 更慢了</strong>，根本原因是 vite 把源文件的 resolve、load、transform、parse 延后到由浏览器执行。但只要在首屏渲染完成后，vite 会使用强缓存对构建内容进行缓存，在这之后相比于 webpack 每次更新内容之后的重新打包，vite 的热更新又是是丝滑的热更新体验</p><p>为什么生产环境不一并迁移 vite？最主要的考虑还是担心影响现有业务流程，而且 vite 的生产环境也是通过 rollup 打包来实现的，在生产构建没有很大的性能时间问题前暂时还是使用 webpack 进行生产打包构建</p><h2 id="迁移步骤和踩坑总结" tabindex="-1">迁移步骤和踩坑总结 <a class="header-anchor" href="#迁移步骤和踩坑总结" aria-label="Permalink to &quot;迁移步骤和踩坑总结&quot;">​</a></h2><p>首先是安装依赖，因为最新版本的 Vite 3.0 支持的 Node 最低版本是 14.18+，不再支持 Node 12，考虑到老项目，还是选择了 Vite 2.9 版本。另外老项目使用的还是 Vue2，所以需要使用到 <a href="https://github.com/underfin/vite-plugin-vue2" target="_blank" rel="noreferrer">vite-plugin-vue2</a> 插件，让 Vue2 项目中可以使用 Vite。</p><blockquote><p><code>vue@2.7</code>版本，需要安装<a href="./">@vitejs/plugin-vue2</a>，2.7之前的版本安装<a href="https://github.com/underfin/vite-plugin-vue2" target="_blank" rel="noreferrer">vite-plugin-vue2</a></p></blockquote><ul><li>安装依赖：<code>npm i -D vite@^2.9.14 vite-plugin-vue2</code>，然后在 <code>package.json</code>新增一个启动命令，新建一个 <code>vite.config.js</code> 配置文件</li></ul><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// vite 启动命令</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">dev:vite</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vite</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 新增 vite.config.js 文件和基础内容</span></span>
<span class="line"><span style="color:#BABED8;">import </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> defineConfig </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> from </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vite</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">;</span></span>
<span class="line"><span style="color:#BABED8;">import </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> createVuePlugin </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> from </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vite-plugin-vue2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">export default defineConfig(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  plugins</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#BABED8;">    createVuePlugin(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      jsx</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>不出意外的话是可以直接启动的，但是页面是空白，原因是因为在传统的 vue-cli / webpack 项目中 <code>index.html</code> 文件一般都是放在 <code>public</code> 目录下。而在 vite 项目中 <code>index.html</code> 是放在根目录下，作为整个项目的入口，通过 <code>index.html</code> 中的 <code>&lt;script&gt;</code> 标签来加载 js 文件。考虑到升级前定下的原则：<strong>尽量不改动原有项目代码和配置</strong>，所以需要使用到 <a href="https://github.com/vbenjs/vite-plugin-html/blob/main/README.zh_CN.md" target="_blank" rel="noreferrer">vite-plugin-html</a> 这个插件修改 vite 识别 <code>index.html</code> 目录的位置</p><ul><li>安装依赖 <code>npm i -D vite-plugin-html</code>，然后在 <code>vite.config.js</code> 中配置 <code>index.html</code> 入口</li><li>index.html 新增：<code>&lt;script type=&quot;module&quot; src=&quot;/src/main.js&quot;&gt;&lt;/script&gt;</code></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">createHtmlPlugin</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vite-plugin-html</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">createHtmlPlugin</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">public/index.html</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">minify</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  ]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>接下来启动项目，会发现 Vite 无法识别忽略 <code>.vue</code> 后缀的文件，这是因为 Vite 已不再默认忽略.vue扩展名（根据 github 上 <a href="https://github.com/vitejs/vite/issues/178#issuecomment-630138450" target="_blank" rel="noreferrer">issue 讨论</a>，尤大回答设计就是如此），所以只能手动兼容</p><p><img src="https://qn.huat.xyz/mac/202402071218589.awebp" alt=""></p><ul><li>在 <code>vite.config.js</code> 中手动配置后缀名忽略选项</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">resolve</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 手动配置后缀名忽略选项</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">extensions</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.json</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.mjs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>继续启动项目，提示找不到 sass 依赖，只能重新安装 sass，版本选择低一些，<code>sass@~1.26.5</code>，过高可能存在问题</p><ul><li>安装 sass 依赖：<code>npm i -D sass@~1.26.5</code></li></ul><p><img src="https://qn.huat.xyz/mac/202402071218484.awebp" alt=""></p><p>接下来启动项目需要解决两个别名识别问题，一个是常用的 webpack 别名定义，一般都会在 webpack 配置文件定义 <code>src</code> 目录的别名方便开发引入文件。第二个是 sass 别名的引入，项目中引入 sass 文件的方式是 <code>@import &#39;~variable.scss&#39;</code>，vite 支持了 <code>@import</code> 的引入，但是无法识别<code>~</code> 别名</p><p><img src="https://qn.huat.xyz/mac/202402071218586.awebp" alt=""></p><ul><li>增加适配 webpack 定义别名 <code>@xxx</code> 和 <code>@/xxx</code> 的场景</li><li>增加适配引入 sass 文件 <code>~/xxxx</code> 和 <code>~xxx</code> 的场景</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">resolve</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">alias</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// 适配 @xxxx、@/xxxx</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">find</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">replacement</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#BABED8;">(__dirname</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">src</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// 适配 ~/xxxx</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">find</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">/* ~/ */</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">~</span><span style="color:#89DDFF;">(?=</span><span style="color:#BABED8;">\\/</span><span style="color:#89DDFF;">)/</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">replacement</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#BABED8;">(__dirname</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node_modules</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// 适配 ~xxxx</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">find</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">/* ~ */</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">~</span><span style="color:#89DDFF;">(?!</span><span style="color:#BABED8;">\\/</span><span style="color:#89DDFF;">)/</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">replacement</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#BABED8;">(__dirname</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node_modules/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">    ]</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>继续填坑，提示 <code>require is not defined</code>，由于开发环境使用浏览器的 ESM 模式，不支持 CJS 模式，本着不修改源码的原则，继续使用插件兼容 CJS 的模式</p><ul><li>安装 <a href="https://www.npmjs.com/package/@originjs/vite-plugin-require-context" target="_blank" rel="noreferrer">@originjs/vite-plugin-require-context</a> 和 <a href="https://github.com/vite-plugin/vite-plugin-commonjs" target="_blank" rel="noreferrer">vite-plugin-commonjs</a> 插件并在 <code>vite.config.js</code> 文件中引入</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> commonjs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vite-plugin-commonjs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> ViteRequireContext </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@originjs/vite-plugin-require-context</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 兼容 commonjs</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">commonjs</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 兼容 webpack require.context 写法</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">ViteRequireContext</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  ]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>在 webpack 中使用环境变量的方式主要是通过 <code>p<wbr>rocess.env.xxx</code>，而 vite 中是通过 <code>i<wbr>mport.meta.env.VITE_xxx</code> 的方式访问环境变量，为了不影响生产环境 webpack 环境变量的使用，需要自定义项目中使用到的环境变量</p><ul><li>在 <code>vite.config.js</code> 中自定义项目使用到的环境变量</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">define</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 同 webpack.DefinePlugin，手动兼容 dev 环境 p<wbr>rocess.env</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">p<wbr>rocess.env</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      VUE_APP_ENV</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">development</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      VUE_APP_REQUESTPATH</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/hrpb</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      VUE_APP_TITLE</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">传统金融业务人员PB系统</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      VUE_APP_SHORT_TITLE</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hrpb</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">},</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>到这里项目中基本可以正常启动不报错了，但是如果项目使用的 UI 组件库是按需引入的话，还要在 vite 中重新配置一遍按需引入</p><ul><li>使用 <a href="https://github.com/vbenjs/vite-plugin-style-import" target="_blank" rel="noreferrer">vite-plugin-style-import</a> 配置 UI 组件库按需引入</li><li><code>vite.config.js</code> 配置 ant-design-vue 主题色等自定义颜色</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">createStyleImportPlugin</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">AndDesignVueResolve</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vite-plugin-style-import</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 导入 ant-design-vue 样式</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#82AAFF;">createStyleImportPlugin</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">resolves</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#82AAFF;">AndDesignVueResolve</span><span style="color:#BABED8;">()]</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#FFCB6B;">css</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 定义 ant-design-vue 颜色</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">preprocessorOptions</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">less</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#FFCB6B;">modifyVars</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">primary-color</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#b60005</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">javascriptEnabled</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="迁移-vite-后效果" tabindex="-1">迁移 vite 后效果 <a class="header-anchor" href="#迁移-vite-后效果" aria-label="Permalink to &quot;迁移 vite 后效果&quot;">​</a></h2><p>冷启动时间直线减少，现在只需要 2 秒左右，而且即使项目体积增大，启动速度也没有太大的变化，其次就是热更新几乎是无感的，不像 webpack 可能还需要等待一两秒的重新打包</p><p><img src="https://qn.huat.xyz/mac/202402071224435.awebp" alt="截屏2022-08-21 19.11.11"></p><p>但现在 vite 的首屏加载时间确实是存在的一个问题，相信这也是 vite 后续提升的方向之一吧</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><p>vue2.7+webpack迁移vite实践总结</p><p><a href="https://juejin.cn/post/7249933985564000312" target="_blank" rel="noreferrer">https://juejin.cn/post/7249933985564000312</a></p><p>[ Vite ]使用 vite 重构 webpack 项目过程中对两者之间差异对比的思考（ 一 ）</p><p><a href="https://juejin.cn/post/7101544284788097032" target="_blank" rel="noreferrer">https://juejin.cn/post/7101544284788097032</a></p>`,42),o=[e];function t(c,r,i,D,y,F){return n(),a("div",null,o)}const B=s(p,[["render",t]]);export{b as __pageData,B as default};
