import{_ as a,o as l,c as e,Q as i}from"./chunks/framework.fb3766a7.js";const p=JSON.parse('{"title":"源码阅读心得分享","description":"","frontmatter":{},"headers":[],"relativePath":"workflow/cli/第3章/03-源码阅读心得分享.md","lastUpdated":1706873516000}'),t={name:"workflow/cli/第3章/03-源码阅读心得分享.md"},o=i('<h1 id="源码阅读心得分享" tabindex="-1">源码阅读心得分享 <a class="header-anchor" href="#源码阅读心得分享" aria-label="Permalink to &quot;源码阅读心得分享&quot;">​</a></h1><h2 id="为什么要阅读源码" tabindex="-1">为什么要阅读源码？ <a class="header-anchor" href="#为什么要阅读源码" aria-label="Permalink to &quot;为什么要阅读源码？&quot;">​</a></h2><p>提升技术能力最重要的路径</p><ul><li>阅读源码是前端程序员成长的<strong>必经路径</strong>，无法跨越；</li><li>源码阅读量是前端程序员<strong>技术能力的分水岭</strong>，高质量源码阅读量越大，技术能力越强，技术视野越宽；</li><li>每一次高质量源码阅读都是一次<strong>自我超越</strong>，会伴随极强的成就感。</li></ul><h2 id="为什么熟读源码的人很少" tabindex="-1">为什么熟读源码的人很少？ <a class="header-anchor" href="#为什么熟读源码的人很少" aria-label="Permalink to &quot;为什么熟读源码的人很少？&quot;">​</a></h2><ul><li>理解别人逻辑比自己构建逻辑难得多</li><li>基础不够扎实，容易碰到无法理解的代码</li><li>越高效的源码往往实现也越复杂，难以理解</li></ul><h2 id="如何高效阅读源码" tabindex="-1">如何高效阅读源码？ <a class="header-anchor" href="#如何高效阅读源码" aria-label="Permalink to &quot;如何高效阅读源码？&quot;">​</a></h2><ul><li>使用优先：先学习 API 使用，再阅读源码</li><li>技术分享：逐步积累源码阅读经验，从阅读源码中获得乐趣和成就感，将阅读笔记分享到知识平台获得持续阅读的动力</li><li>学以致用：将学到的新技术能力应用到实际工作中，加深对技术的理解</li></ul><h2 id="源码读不懂怎么办" tabindex="-1">源码读不懂怎么办？ <a class="header-anchor" href="#源码读不懂怎么办" aria-label="Permalink to &quot;源码读不懂怎么办？&quot;">​</a></h2><ul><li>把源码中每一个不懂的点，作为重要的学习机会</li><li>通过调试（Debug）的方式阅读源码</li><li>逐行阅读源码，搞清楚代码中每一个实现细节</li><li>碰到不懂的内容，停下来，死磕到底，搞懂为止</li></ul>',10),r=[o];function n(s,_,c,h,d,u){return l(),e("div",null,r)}const m=a(t,[["render",n]]);export{p as __pageData,m as default};
