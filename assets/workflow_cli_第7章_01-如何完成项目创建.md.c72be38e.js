import{_ as a,o as l,c as e,Q as i}from"./chunks/framework.fb3766a7.js";const p=JSON.parse('{"title":"如何利用模板创建项目","description":"","frontmatter":{},"headers":[],"relativePath":"workflow/cli/第7章/01-如何完成项目创建.md","lastUpdated":1707358331000}'),t={name:"workflow/cli/第7章/01-如何完成项目创建.md"},r=i('<h1 id="如何利用模板创建项目" tabindex="-1">如何利用模板创建项目 <a class="header-anchor" href="#如何利用模板创建项目" aria-label="Permalink to &quot;如何利用模板创建项目&quot;">​</a></h1><h2 id="为什么要开发创建项目的脚手架" tabindex="-1">为什么要开发创建项目的脚手架？ <a class="header-anchor" href="#为什么要开发创建项目的脚手架" aria-label="Permalink to &quot;为什么要开发创建项目的脚手架？&quot;">​</a></h2><ul><li>为什么不直接使用 vue-cli 或者 create-react-app？ <ul><li>项目在迭代过程中会添加很多本土化的元素，如：H5 兼容、接口请求、埋点上报、组件封装、通用方法等，甚至会对整块业务逻辑进行复用，比如登录；</li><li>每次在创建项目的时候都要重新填写这些代码是非常耗时的，而且无法对每个团队成员进行复用，可以利用脚手架来完成项目模板的沉淀和标准化建设。</li></ul></li></ul><h2 id="制作项目模板" tabindex="-1">制作项目模板 <a class="header-anchor" href="#制作项目模板" aria-label="Permalink to &quot;制作项目模板&quot;">​</a></h2><ul><li>根据项目沉淀，制作项目模板</li><li>模板类型不限</li><li>脚手架提供创建项目的基本信息选择 <ul><li>创建类型：决定创建的是项目或者页面等</li><li>项目名称：决定文件夹名称</li><li>项目模板：决定项目类型</li></ul></li></ul><h2 id="下载项目模板" tabindex="-1">下载项目模板 <a class="header-anchor" href="#下载项目模板" aria-label="Permalink to &quot;下载项目模板&quot;">​</a></h2><ul><li>生成缓存目录</li><li>利用 npm 接口获取下载路径</li><li>下载模板至缓存目录</li></ul><h2 id="安装项目模板" tabindex="-1">安装项目模板 <a class="header-anchor" href="#安装项目模板" aria-label="Permalink to &quot;安装项目模板&quot;">​</a></h2><ul><li>拷贝模板指定目录到项目目录下</li><li>忽略拷贝特定目录或文件</li><li>根据 --force 强制安装</li></ul>',9),o=[r];function _(c,n,s,h,d,u){return l(),e("div",null,o)}const m=a(t,[["render",_]]);export{p as __pageData,m as default};
