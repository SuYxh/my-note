import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.1c251e17.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"deploy/nginx/nginx配置https.md","lastUpdated":1699490805000}'),p={name:"deploy/nginx/nginx配置https.md"},e=l(`<p>以下是一份完整的 HTTPS nginx 配置示例</p><h2 id="反向代理" tabindex="-1">反向代理 <a class="header-anchor" href="#反向代理" aria-label="Permalink to &quot;反向代理&quot;">​</a></h2><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">server</span><span style="color:#BABED8;"> {</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> listen </span><span style="color:#BABED8;">443 ssl</span><span style="color:#89DDFF;"> default_server;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> listen </span><span style="color:#BABED8;">[::]:443 ssl</span><span style="color:#89DDFF;"> default_server;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> server_name </span><span style="color:#BABED8;">example.com</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;"># SSL证书</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> ssl_certificate </span><span style="color:#BABED8;">/etc/nginx/ssl/example.com.crt</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> ssl_certificate_key </span><span style="color:#BABED8;">/etc/nginx/ssl/example.com.key</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;"># 客户端证书验证</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> ssl_client_certificate </span><span style="color:#BABED8;">/etc/nginx/ssl/ca.crt</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> ssl_verify_client </span><span style="color:#BABED8;">on</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;"># 支持TLS 1.3和HTTP/2</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> ssl_protocols </span><span style="color:#BABED8;">TLSv1.2 TLSv1.3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> ssl_prefer_server_ciphers </span><span style="color:#BABED8;">on</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> ssl_ciphers </span><span style="color:#BABED8;">ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;"># 配置加密协商缓存</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> ssl_session_cache </span><span style="color:#BABED8;">shared:SSL:10m</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> ssl_session_timeout </span><span style="color:#BABED8;">5m</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;"># 浏览器端HSTS</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> add_header </span><span style="color:#BABED8;">Strict-Transport-Security </span><span style="color:#C3E88D;">&quot;max-age=63072000; includeSubDomains; preload;&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> add_header </span><span style="color:#BABED8;">X-Content-Type-Options nosniff</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> add_header </span><span style="color:#BABED8;">X-Frame-Options SAMEORIGIN</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> add_header </span><span style="color:#BABED8;">X-XSS-Protection </span><span style="color:#C3E88D;">&quot;1; mode=block&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;"># 配置Nginx缓存</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> proxy_cache_path </span><span style="color:#BABED8;">/var/cache/nginx levels=1:2 keys_zone=my_cache:10m inactive=60m</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> proxy_cache_key </span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">$</span><span style="color:#BABED8;">scheme</span><span style="color:#89DDFF;">$</span><span style="color:#BABED8;">request_method</span><span style="color:#89DDFF;">$</span><span style="color:#BABED8;">host</span><span style="color:#89DDFF;">$</span><span style="color:#BABED8;">request_uri</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> add_header </span><span style="color:#BABED8;">X-Cache-Status </span><span style="color:#89DDFF;">$</span><span style="color:#BABED8;">upstream_cache_status</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;"># 支持gzip压缩</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> gzip </span><span style="color:#BABED8;">on</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> gzip_types </span><span style="color:#BABED8;">text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;"># 配置代理</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">location</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#BABED8;">{</span></span>
<span class="line"><span style="color:#BABED8;">   </span><span style="color:#89DDFF;"> proxy_pass </span><span style="color:#BABED8;">http://localhost:3000</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">   </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#BABED8;">Host </span><span style="color:#89DDFF;">$</span><span style="color:#BABED8;">host</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">   </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#BABED8;">X-Real-IP </span><span style="color:#89DDFF;">$</span><span style="color:#BABED8;">remote_addr</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">   </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#BABED8;">X-Forwarded-For </span><span style="color:#89DDFF;">$</span><span style="color:#BABED8;">proxy_add_x_forwarded_for</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#676E95;font-style:italic;"># 配置Nginx缓存</span></span>
<span class="line"><span style="color:#BABED8;">   </span><span style="color:#89DDFF;"> proxy_cache </span><span style="color:#BABED8;">my_cache</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">   </span><span style="color:#89DDFF;"> proxy_cache_valid </span><span style="color:#BABED8;">200 </span><span style="color:#F78C6C;">60m</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">   </span><span style="color:#89DDFF;"> proxy_cache_valid </span><span style="color:#BABED8;">404 </span><span style="color:#F78C6C;">1m</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">   </span><span style="color:#89DDFF;"> add_header </span><span style="color:#BABED8;">X-Cache-Status </span><span style="color:#89DDFF;">$</span><span style="color:#BABED8;">upstream_cache_status</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#676E95;font-style:italic;"># 支持WebSocket</span></span>
<span class="line"><span style="color:#BABED8;">   </span><span style="color:#89DDFF;"> proxy_http_version </span><span style="color:#BABED8;">1.1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">   </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#BABED8;">Upgrade </span><span style="color:#89DDFF;">$</span><span style="color:#BABED8;">http_upgrade</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">   </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#BABED8;">Connection </span><span style="color:#C3E88D;">&quot;upgrade&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#676E95;font-style:italic;"># 支持长连接</span></span>
<span class="line"><span style="color:#BABED8;">   </span><span style="color:#89DDFF;"> proxy_set_header </span><span style="color:#BABED8;">Connection </span><span style="color:#C3E88D;">&quot;&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">   </span><span style="color:#89DDFF;"> proxy_read_timeout </span><span style="color:#BABED8;">1d</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  }</span></span>
<span class="line"><span style="color:#BABED8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">server</span><span style="color:#BABED8;"> {</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> listen </span><span style="color:#BABED8;">80</span><span style="color:#89DDFF;"> default_server;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> listen </span><span style="color:#BABED8;">[::]:80</span><span style="color:#89DDFF;"> default_server;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> server_name </span><span style="color:#BABED8;">example.com</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">301</span><span style="color:#BABED8;"> https://</span><span style="color:#89DDFF;">$</span><span style="color:#BABED8;">server_name</span><span style="color:#89DDFF;">$</span><span style="color:#BABED8;">request_uri;</span></span>
<span class="line"><span style="color:#BABED8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><p>这个示例包含 HTTPS 监听、SSL 证书、客户端证书验证、TLS 1.3 和 HTTP/2、加密协商缓存、浏览器端 HSTS、Nginx 缓存、gzip 压缩、代理和 WebSocket 支持。HTTP 请求被重定向到 HTTPS 端口。注意更改 server_name 和证书路径以匹配您的设置。</p><h2 id="静态文件" tabindex="-1">静态文件 <a class="header-anchor" href="#静态文件" aria-label="Permalink to &quot;静态文件&quot;">​</a></h2><p>上述 HTTPS nginx 配置示例仅涉及到代理相关配置，并没有包含关于指定访问的目录的配置。在实际应用中，需要指定 Nginx 服务器请求的目录路径，例如：</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">server</span><span style="color:#BABED8;"> {</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> listen </span><span style="color:#BABED8;">443 ssl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> server_name </span><span style="color:#BABED8;">example.com</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;"># SSL证书</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> ssl_certificate </span><span style="color:#BABED8;">/etc/nginx/ssl/example.com.crt</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> ssl_certificate_key </span><span style="color:#BABED8;">/etc/nginx/ssl/example.com.key</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;"># 指定访问目录位置</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> root </span><span style="color:#BABED8;">/var/www/html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> index </span><span style="color:#BABED8;">index.html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">location</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#BABED8;">{</span></span>
<span class="line"><span style="color:#BABED8;">   </span><span style="color:#89DDFF;"> try_files $</span><span style="color:#BABED8;">uri </span><span style="color:#89DDFF;">$</span><span style="color:#BABED8;">uri/ </span><span style="color:#F78C6C;">=404</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  }</span></span>
<span class="line"><span style="color:#BABED8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 重定向HTTP请求到HTTPS</span></span>
<span class="line"><span style="color:#C792EA;">server</span><span style="color:#BABED8;"> {</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> listen </span><span style="color:#BABED8;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;"> server_name </span><span style="color:#BABED8;">example.com</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">301</span><span style="color:#BABED8;"> https://</span><span style="color:#89DDFF;">$</span><span style="color:#BABED8;">host</span><span style="color:#89DDFF;">$</span><span style="color:#BABED8;">request_uri;</span></span>
<span class="line"><span style="color:#BABED8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>在示例中，我们增加了 <code>root</code> 指令，设定了服务器默认请求的目录为 <code>/var/www/html</code>。同时，<code>index</code> 指令设定了默认的文档为 <code>index.html</code>。<code>location</code> 块指定了任何请求都将尝试在此目录中寻找文件，如果找到，则 Nginx 服务器返回该文件，否则将返回一个 404 状态。</p><p>需要注意的是，对于静态文件的访问，建议将其交由 Nginx 服务器直接处理，可以使用 <code>try_files</code> 指令或 <code>rewrite</code> 指令来实现。而对于动态请求，则应该转发给应用服务器处理。</p>`,9),o=[e];function r(c,t,D,i,y,B){return n(),a("div",null,o)}const E=s(p,[["render",r]]);export{b as __pageData,E as default};
