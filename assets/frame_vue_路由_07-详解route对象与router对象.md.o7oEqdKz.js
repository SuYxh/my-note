import{_ as e,c as r,o as t,V as o}from"./chunks/framework.hxTji2_l.js";const m=JSON.parse('{"title":"详解 route 对象与 router 对象","description":"","frontmatter":{},"headers":[],"relativePath":"frame/vue/路由/07-详解route对象与router对象.md","filePath":"frame/vue/路由/07-详解route对象与router对象.md","lastUpdated":1716802015000}'),l={name:"frame/vue/路由/07-详解route对象与router对象.md"},a=o('<h1 id="详解-route-对象与-router-对象" tabindex="-1">详解 route 对象与 router 对象 <a class="header-anchor" href="#详解-route-对象与-router-对象" aria-label="Permalink to &quot;详解 route 对象与 router 对象&quot;">​</a></h1><p>在前面小节中，我们频繁的使用过 route 对象和 router 对象，这两个对象在路由中非常的重要，下面我们来详细的学习一下。</p><h2 id="route-对象与-router-对象" tabindex="-1">route 对象与 router 对象 <a class="header-anchor" href="#route-对象与-router-对象" aria-label="Permalink to &quot;route 对象与 router 对象&quot;">​</a></h2><p>首先 route 对象用来获取路由信息，而 router 对象用来调用路由方法的。具体区别在于，route 对象是针对获取操作的，主要是操作当前路由的，而 router 对象是针对设置操作的，主要是操作整个路由系统对应的功能。</p><p>route 对象具体功能如下：</p><ul><li>fullPath</li><li>hash</li><li>href</li><li>matched</li><li>meta</li><li>name</li><li>params</li><li>path</li><li>query</li></ul><p>主要就是一些路由信息，像常见的动态路由参数，query 数据，meta 元信息，url 路径等等。</p><p>router 对象具体功能如下：</p><ul><li>addRoute</li><li>afterEach</li><li>back</li><li>beforeEach</li><li>beforeResolve</li><li>currentRoute</li><li>forward</li><li>getRoutes</li><li>go</li><li>hasRoute</li><li>push</li><li>removeRoute</li></ul><p>主要就是一些方法，动态改变路由表，路由守卫， 历史记录的前进后退，编程式路由等等。</p>',10),i=[a];function u(_,s,c,p,h,n){return t(),r("div",null,i)}const f=e(l,[["render",u]]);export{m as __pageData,f as default};
