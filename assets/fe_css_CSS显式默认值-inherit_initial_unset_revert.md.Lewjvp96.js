import{_ as s,c as i,o as a,V as n}from"./chunks/framework.hxTji2_l.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"fe/css/CSS显式默认值-inherit&initial&unset&revert.md","filePath":"fe/css/CSS显式默认值-inherit&initial&unset&revert.md","lastUpdated":1719478304000}'),e={name:"fe/css/CSS显式默认值-inherit&initial&unset&revert.md"},t=n(`<p>近年来，CSS 添加了一些全局关键词：<code>inherit</code> 、<code>initial</code> 、<code>unset</code> 和 <code>revert</code> 。理论上，它们可以应用于除 <code>none</code> 以外的任何 CSS 属性。它们在 CSS 中也被称为 <strong>CSS 显式默认值</strong>，其中 <code>inherit</code> 、<code>initial</code> 和 <code>unset</code> 是在级联层 Level3 （<a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.w3.org%2FTR%2Fcss-cascade-3%2F" title="https://www.w3.org/TR/css-cascade-3/" target="_blank" rel="noreferrer">Cascading Level 3</a>）规范中定义的，而 <code>revert</code> 是在级联层 Level4 （<a href="https://link.juejin.cn/?target=https%3A%2F%2Fdrafts.csswg.org%2Fcss-cascade%2F" title="https://drafts.csswg.org/css-cascade/" target="_blank" rel="noreferrer">Cascading Level 4</a>）中添加的。在 CSS 中，它们可以在属性的默认值或重置属性的值方面提供很多细微的控制。</p><p>今天，我们就来简单了解一下这些特殊的 CSS 关键词。同时，我们也将探讨何时使用它们的效果最好，以及它们之间存在的一些重要的区别。</p><p>在我们深入探讨 <code>inherit</code> 、<code>initial</code> 、<code>unset</code> 和 <code>revert</code> 等关键词之前，我们有必要先了解一些 CSS 的基础知识，比如 CSS 属性的初始值、浏览器默认样式表、继承和非继承等。</p><p>那我们就先从 CSS 属性的初始值开始！</p><h3 id="css-属性的初始值" tabindex="-1">CSS 属性的初始值 <a class="header-anchor" href="#css-属性的初始值" aria-label="Permalink to &quot;CSS 属性的初始值&quot;">​</a></h3><p>在 CSS 中，每一个 CSS 属性都会有一个属于自己的初始值，即由客户端（比如，浏览器）定义的值。这个值通常在 CSS 规范中为该属性定义。简单地说，你在 W3C 规范中查询任何 CSS 属性，它都会具有一个初始值。如下图所示：</p><p><img src="https://qn.huat.xyz/mac/202406050936103.awebp" alt="img"></p><p>即，规范中介绍属性参数时，会有一个名为 “Initial” 选项，该选项对应的值就是 CSS 属性的初始值，也就是 <code>initial</code> 对应的值。例如 <code>font-size</code> 的初始值是 <code>medium</code> ，即：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 等同于 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">medium</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>这是很重要的，因为在大多数情况下，我们都希望<strong>将属性的值重置为其初始值</strong>。</p><h3 id="浏览器默认-user-agent-样式表" tabindex="-1">浏览器默认（User-Agent）样式表 <a class="header-anchor" href="#浏览器默认-user-agent-样式表" aria-label="Permalink to &quot;浏览器默认（User-Agent）样式表&quot;">​</a></h3><p>在所有的 CSS 属性都设置完初始样式之后，紧接着浏览器会加载自身的样式表。该样式表与 CSS 属性的初始值没有任何关系。例如，<code>h1</code> 元素，浏览器给它设置的默认样式如下：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* user agent stylesheet */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">em</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-block-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.67</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">em</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-block-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.67</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">em</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-inline-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-inline-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-weight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>HTML 元素是没有初始样式值的！上面所示代码中 <code>&lt;h1&gt;</code> 标签元素的基础样式是从“用户代理样式表”（user agent stylesheet）中获取的，而不是 CSS 属性的初始值 <code>initial</code>。</p><h3 id="两种属性类型-继承和非继承" tabindex="-1">两种属性类型：继承和非继承 <a class="header-anchor" href="#两种属性类型-继承和非继承" aria-label="Permalink to &quot;两种属性类型：继承和非继承&quot;">​</a></h3><p>CSS 中有两组属性：</p><ul><li><strong>继承属性组</strong>：由默认情况下从父元素继承定义的属性组成；它们主要是排版属性（如 <code>font-size</code>、<code>color</code> 等）。<a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.w3.org%2FTR%2FCSS21%2Fpropidx.html" title="https://www.w3.org/TR/CSS21/propidx.html" target="_blank" rel="noreferrer">你可以点击这里查询可继承的 CSS 属性组</a>。</li><li><strong>非继承属性组</strong>：由其余的属性组成，它们不受父元素的定义影响（比如 <code>margin</code> 、<code>padding</code> 等）。</li></ul><p>同样的，在 W3C 描述每个属性的时候，都有明确的描述，该属性是哪种类型的属性：</p><p><img src="https://qn.huat.xyz/mac/202406050937868.awebp" alt="img"></p><p>正如上图所示，<code>font-size</code> 属性的 “Inherited” 参数值为 “yes” 时，表示该属性是一个可继承属性；<code>dispaly</code> 和 <code>background-color</code> 属性的 “Inherited” 参数值为 “no”，表示它们是一个非可继承属性。</p><p>CSS 的可继承属性是有一种机制的。简单地说，每个 HTML 元素默认有每个 CSS 属性的定义初始值。初始值是一个不可继承的属性，如果级联无法计算元素的值，则会显示为默认值。</p><p>可以被继承的属性会向下级联，子元素将获得一个计算值，该计算值代表其父元素的值。这意味着，如果父元素的 <code>font-weight</code> 属性设置为 <code>bold</code>，所有子元素都会是粗体，除非它们的 <code>font-weight</code> 属性被设置为不同的值，或者用户代理样式表为该元素设置了一个 <code>font-weight</code> 值。</p><p>也就是说：</p><ul><li>当元素的一个继承属性没有指定值时，则取父元素的同属性的计算值，只有文档根元素取该属性的概述中给定的初始值；</li><li>当元素的一个非继承属性没有指定值时，则取属性的初始值。</li></ul><h2 id="处理-css-继承的机制" tabindex="-1">处理 CSS 继承的机制 <a class="header-anchor" href="#处理-css-继承的机制" aria-label="Permalink to &quot;处理 CSS 继承的机制&quot;">​</a></h2><p>在 CSS 中提供了几个属性值，可以用来处理 CSS 属性的继承。这几个属性值就是 <code>initial</code>、<code>inherit</code>、<code>unset</code> 和 <code>revert</code>。其实除了这四个属性值之外，还有一个 <code>all</code> 属性值。虽然这几个属性值主要用来帮助大家处理 CSS 属性继承的，但他们之间的使用，还是有一定的差异化。</p><p>先用一张图来阐述它们之间的差异：</p><p><img src="https://qn.huat.xyz/mac/202406050937814.awebp" alt="img"></p><p>接下来我们一看看这几个属性值的实际使用以及对应的差异化。</p><h3 id="initial-的作用是什么" tabindex="-1">initial 的作用是什么？ <a class="header-anchor" href="#initial-的作用是什么" aria-label="Permalink to &quot;initial 的作用是什么？&quot;">​</a></h3><p>最容易理解的 CSS 值是 <code>initial</code>。这个值只是将 CSS 属性重置为其初始值，这个初始值在该属性的 W3C 规范中指定。但使用它时，你可能会感到困惑，因为属性的初始 CSS 值并不总是你想象的那样，它通常与浏览器的默认样式不同。</p><p>事实上，从 W3C 规范中获取的 CSS 属性初始值也较为混乱。其中有些是合理的，有些是不合理的。例如，CSS 的 <code>float</code> 的初始值是 <code>none</code> ，<code>background-color</code> 的初始值是 <code>transparent</code> ，它们是属性合理的一类。但有一些基本上是任意的。比如 CSS 的 <code>display</code> 属性，为什么初始值就是 <code>inline</code> ，而不是 <code>block</code> 呢？我也不知道当时 CSS 工作小组为什么要这样设计 <code>display</code> 属性，我们只知道 W3C 规范也给 <code>display</code> 定义了一个初始值，虽然 <code>inine</code> 有点奇怪，但 <code>block</code> 同样奇怪。</p><p>也就是说，<strong>无论如何，<code>initial</code></strong> <strong>关键字<strong><strong>都要</strong></strong>将属性恢复到规范中<strong><strong>定义</strong></strong>的初始值，无论是否合理</strong>。</p><p>即使 W3C 对 CSS 属性的初始值定义有些混乱或者不合理，但是在一些具体场景中，将 CSS 的属性的值设置为 <code>initial</code> 是非常有益的。比如，你想删除所有特定于浏览器的样式时，使用 <code>initial</code> 值就是非常好的选择。</p><p>我们来看一个具体的示例。假设我们有一个<code>&lt;p&gt;</code> 元素：</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;👧🏼欢迎来到现代 CSS 的世界中🎫&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这个 <code>&lt;p&gt;</code> 元素是一个块元素，即 <code>display: block</code> 。</p><p>为了好看，咱们添加一点修饰的样式代码：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#f36</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">clamp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">cqw</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.25</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#fff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    text-shadow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> .0125</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">em</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rgb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>你在浏览器中看到的效果如下：</p><p><img src="https://qn.huat.xyz/mac/202406050938761.awebp" alt="img"></p><blockquote><p>Demo 地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fcodepen.io%2Fairen%2Ffull%2FeYPMarJ" title="https://codepen.io/airen/full/eYPMarJ" target="_blank" rel="noreferrer">codepen.io/airen/full/…</a></p></blockquote><p>如果我们希望 <code>p</code> 元素变成行内元素时，按照我们以前的处理方式，需要手动处理浏览器默认样式（User-Agent 用户代理样式），也就是显示的重置：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    dispaly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>block</code> 和 <code>inline</code> 效果对比如下：</p><p><img src="https://qn.huat.xyz/mac/202406050938894.awebp" alt="img"></p><blockquote><p>Demo 地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fcodepen.io%2Fairen%2Ffull%2FVwEXOGQ" title="https://codepen.io/airen/full/VwEXOGQ" target="_blank" rel="noreferrer">codepen.io/airen/full/…</a></p></blockquote><p>前面提到过 <code>inline</code> 是 <code>display</code> 的初始值（也就是默认值），而在规范中也提到过： <strong>你在元素样式的设置中显示的设置某个属性的值为</strong> <strong><code>initial</code></strong> <strong>时，其实就表示设置了该属性的默认值</strong>。 也就是说，我们可以给 <code>display</code> 设置 <code>initial</code> 关键词：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 等同于将 diplay 重置为 inline */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>这个时候得到的效果其实和使用 <code>display:inline</code> 是一样的：</p><p><img src="https://qn.huat.xyz/mac/202406050938490.awebp" alt="img"></p><blockquote><p>Demo 地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fcodepen.io%2Fairen%2Ffull%2FpoxLmBj" title="https://codepen.io/airen/full/poxLmBj" target="_blank" rel="noreferrer">codepen.io/airen/full/…</a></p></blockquote><p>使用开发者工具查看相应的计算值，不难发现，<code>display</code> 设置为 <code>initial</code> 时，会覆盖用户代理的样式值 <code>block</code>：</p><p><img src="https://qn.huat.xyz/mac/202406050939137.awebp" alt="img"></p><p>接下来，我们再来看一个继承属性 <code>color</code> 的示例。</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;👧🏼欢迎来到&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">strong</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;现代 CSS &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">strong</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;的世界中🎫&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#f36</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">clamp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">cqw</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.25</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#fff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    text-shadow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> .0125</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">em</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rgb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> strong</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>示例中的 <code>color</code> 属性是一个可继承属性，所以 <code>&lt;p&gt;</code> 元素的后代元素 <code>&lt;strong&gt;</code> 也会继承 <code>&lt;p&gt;</code> 元素中设置的<code>color: #fff</code> 值。如果我们显式的在 <code>strong</code> 中设置 <code>color</code> 的值为 <code>initial</code> 时，那么 <code>strong</code> 的 <code>color</code>将重置为默认值。由于我们没有设置默认的 <code>color</code> 颜色，那么这个时候，浏览器将会把一个计算值赋予成<code>color</code> 的初始值：</p><p><img src="https://qn.huat.xyz/mac/202406050940237.awebp" alt="img"></p><blockquote><p>Demo 地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fcodepen.io%2Fairen%2Ffull%2FabRYgmE" title="https://codepen.io/airen/full/abRYgmE" target="_blank" rel="noreferrer">codepen.io/airen/full/…</a></p></blockquote><h3 id="inherit-的作用是什么" tabindex="-1">inherit 的作用是什么？ <a class="header-anchor" href="#inherit-的作用是什么" aria-label="Permalink to &quot;inherit 的作用是什么？&quot;">​</a></h3><p>在 CSS 中，许多属性会从其父元素继承值。例如，<code>font-family</code>（字体系列）、<code>color</code>（颜色）和许多其他属性默认情况下会继承其值。这就是为什么你可以将一个 <code>div</code> 元素的文本颜色（<code>color</code>）设置为绿色，并使该 <code>div</code> 的所有子元素文本也都变为绿色。通过将 CSS 属性的值设置为 <code>inherit</code>，你告诉浏览器将该 CSS 属性的值设置为与其父元素的属性值相等。如果父元素也继承该属性的话，它将一直向上寻找，直到找到某个父元素上设置的具体值。</p><p>举个例子，如果我给一个 <code>div</code> 元素设置了 <code>5px</code> 的实线蓝色边框（即 <code>border: 5px solid blue</code>），并在该 <code>div</code> 内部放置了一个子元素（比如 <code>p</code> ），那么我们知道边框只会显示在父 <code>div</code> 上，而不会显示在子元素上。</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;👧🏼欢迎来到&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">strong</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;现代 CSS &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">strong</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;的世界中🎫&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #09f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#f36</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">clamp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">cqw</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.25</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#fff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    text-shadow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> .0125</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">em</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rgb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><img src="https://qn.huat.xyz/mac/202406050940613.awebp" alt="img"></p><blockquote><p>Demo 地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fcodepen.io%2Fairen%2Ffull%2FvYVRqqB" title="https://codepen.io/airen/full/vYVRqqB" target="_blank" rel="noreferrer">codepen.io/airen/full/…</a></p></blockquote><p>然而，如果我在子元素 <code>p</code> 上将 <code>border</code> 属性设置为 <code>inherit</code>，那么该子元素也将具有 <code>5px</code> 的实线蓝色边框：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inherit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="https://qn.huat.xyz/mac/202406050940901.awebp" alt="img"></p><blockquote><p>Demo 地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fcodepen.io%2Fairen%2Ffull%2FNWOYQWp" title="https://codepen.io/airen/full/NWOYQWp" target="_blank" rel="noreferrer">codepen.io/airen/full/…</a></p></blockquote><p>这是一个非常有用的属性值，因为某些元素（如按钮）在浏览器样式表中有特定的 <code>font-family</code> 设置，但你很可能希望继承该 <code>font-family</code> 以与站点的其余部分保持一致。这就是为什么我几乎总是将按钮的 <code>font-family</code> 设置为 <code>inherit</code> 的原因。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-family</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inherit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>需要记住的重要一点是，<strong><code>inherit</code></strong> <strong>属性值使元素从其父元素继承其值，而不是从级联中继承其值</strong>。比如上面这个示例，如果我们在 <code>p</code> 元素上未显式设置 <code>border</code> 属性的值，即使你在 <code>strong</code> 元素中显式设置 <code>border</code> 的值为 <code>inherit</code> ，它也不会继承其祖父元素 <code>div</code> 的边框样式：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #09f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> strong</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inherit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><img src="https://qn.huat.xyz/mac/202406050940526.awebp" alt="img"></p><blockquote><p>Demo 地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fcodepen.io%2Fairen%2Ffull%2FjOezgVY" title="https://codepen.io/airen/full/jOezgVY" target="_blank" rel="noreferrer">codepen.io/airen/full/…</a></p></blockquote><p>这个示例说明：尽管元素自身显式的设置了 <code>inherit</code> 关键词，但是，如果其父元素没有明确指定样式，那么其最终效果将和 <code>revert</code> 的效果一致。<strong>即继承的是其父元素的计算值，也就是浏览器默认样式（User Agent Stylesheet）</strong>。</p><p>前面我们提到过，CSS 的属性会<strong>可继承</strong>和<strong>不可继承</strong>两种类型，对于可继承属性，它是会自动继承其父元素对应的属性值。比如 <code>color</code> 属性，默认情况之下会继承其父元素的 <code>color</code> 值。来看一个具体的例子：</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;box&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">strong</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Color&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">strong</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;是一个可继承属性&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#fff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>理论上，你是不需要在 <code>&lt;strong&gt;</code> 元素上显式设置 <code>color</code> 属性的值，它的文本颜色也是 <code>#fff</code> 。虽然说，<code>color</code> 属性是可继承属性，但也并不意味着它总是会继承其父元素的 <code>color</code> 属性值。因为，有的时候它和客户端（比如，浏览器）设置的默认值也是有关系的。比如，将上面示例中的 <code>&lt;strong&gt;</code> 换成 <code>&lt;a&gt;</code> 元素，要是你没有将 <code>&lt;a&gt;</code> 元素的 <code>color</code> 属性值设置为 <code>inherit</code> ，即使 <code>color</code> 是可继承属性，它的颜色也不会是 <code>#fff</code> （不会继承其父元素的 <code>color</code> 属性值）。这是因为浏览器自动将 <code>&lt;a&gt;</code> 元素的 <code>color</code> 值设置为蓝色。</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;box&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;我是一个链接元素&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;，我的 color 并不会自动继承父元素的 color 值&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#fff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="https://qn.huat.xyz/mac/202406050941866.awebp" alt="img"></p><p>这种现象在 CSS 中很常见，比如 <code>mark</code> 标签也和 <code>a</code> 标签类似。但是，要是你在 <code>a</code> 和 <code>mark</code> 元素上显式将 <code>color</code> 属性的值设置为 <code>inherit</code> 时，结果就会不一样了：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.box</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.box</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> mark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inherit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>它会明确告诉浏览器，<code>a</code> 和 <code>mark</code> 的文本颜色 <code>color</code> 要继承其父元素 <code>.box</code> 的 <code>color</code> 值。在我们这个示例中，<code>a</code> 和 <code>mark</code> 的文本颜色都将变成白色（<code>#fff</code>）：</p><p><img src="https://qn.huat.xyz/mac/202406050942035.awebp" alt="img"></p><blockquote><p>Demo 地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fcodepen.io%2Fairen%2Ffull%2FXWxqzmM" title="https://codepen.io/airen/full/XWxqzmM" target="_blank" rel="noreferrer">codepen.io/airen/full/…</a></p></blockquote><p>无论如何，这就是 <code>inherit</code> 关键字的工作原理。在字体大小或颜色方面使用它可能偶尔是一个好主意，但其他情况下少使用。并且请记住继承和非继承属性之间的差异，稍后这将变得很重要。</p><h3 id="unset-的作用是什么" tabindex="-1">unset 的作用是什么？ <a class="header-anchor" href="#unset-的作用是什么" aria-label="Permalink to &quot;unset 的作用是什么？&quot;">​</a></h3><p><code>unset</code> 是一个有趣的属性值，因为它会执行与 <code>initial</code> 或 <code>inherit</code> 相同的操作。换句话说，<code>unset</code> 关键词可以重置可继承和不可继承的属性。</p><ul><li>如果一个 CSS 属性本来就是继承的，比如 <code>color</code>、<code>font-family</code>等，那么它（<code>unset</code>）将像 <code>inherit</code> 一样执行。</li><li>如果一个 CSS 属性本来就是不可继承的，比如 <code>display</code>、<code>border</code>等，那么它（<code>unset</code>）将像 <code>initial</code> 一样执行。</li></ul><p>也就是说，在任何属性上使用 <code>unset</code> 关键词将会应用其适当的重置关键词。例如：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    max-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* unset = initial = none */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* unset = inherit = 父元素的 font-size 值 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>起初 <code>unset</code> 关键词似乎并不是很有用，因为你可以手动将 <code>inherit</code> 或 <code>initial</code> 作为属性的重置值，但是随着 <code>all</code> 属性出现，<code>unset</code> 就变得非常有用。就拿上面的代码为例，现在你可以直接将 <code>all</code> 设置为 <code>unset</code> 即可：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 等同于 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    max-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* unset = initial = none */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* unset = inherit = 父元素的 font-size 值 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>通过使用 <code>all</code>，我们可以将元素的所有内容重置为初始值或确保它们继承，这在从头开始创建 HTML 元素的样式时非常理想。例如，如果你想从一个按钮（<code>&lt;button&gt;</code>）元素中删除所有浏览器特定的样式，这就非常有用了。</p><p>或者说，一个元素运用了很多属性，你希望能够确保它们全部重置，而无需逐个进行操作。例如，你正在使用一个第三方库（比如 Bootstrap）中的按钮 <code>.button</code> ，但你在某个场景下，需要重置第三方库赋予的所有样式，那么使用 <code>all:unset</code> 就非常有用。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.btn-secondary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="https://qn.huat.xyz/mac/202406050942764.awebp" alt="img"></p><blockquote><p>Demo 地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fcodepen.io%2Fairen%2Ffull%2FPoyeOgq" title="https://codepen.io/airen/full/PoyeOgq" target="_blank" rel="noreferrer">codepen.io/airen/full/…</a></p></blockquote><p>不过，这几乎是 <code>unset</code> 的唯一用例。</p><p>然而，在某些情况下，将 CSS 恢复到其默认值是不够的。例如，如果我们将一个 <code>&lt;div&gt;</code> 元素的 <code>display</code> 属性重置为 <code>unset</code>，我们得到的初始值（<code>initial</code>）将是 <code>inline</code> 而不是 <code>block</code>。示例：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* = initial = inline */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>此时，<code>inline</code> 的值将应用于 <code>div</code> 元素。</p><p>事实上，客户端（比如浏览器）在渲染 HTML 元素时，对于块元素（例如，<code>&lt;div&gt;</code> 、<code>&lt;p&gt;</code> 等），<code>display</code> 属性的初始值为 <code>block</code>，但对于内联元素（例如 <code>&lt;span&gt;</code> 和 <code>&lt;a&gt;</code>），<code>display</code> 的初始值为 <code>inline</code>。如果仅是将元素的 <code>display</code> 属性被设置为 <code>unset</code>，它将最终以 <code>inline</code> 的方式渲染，这是因为初始值（<code>initial</code>）没有使用浏览器的 User-agent-stylesheet 中的默认样式。</p><h3 id="revert-的作用是什么" tabindex="-1">revert 的作用是什么？ <a class="header-anchor" href="#revert-的作用是什么" aria-label="Permalink to &quot;revert 的作用是什么？&quot;">​</a></h3><p>作为一名 Web 开发者，我想你在对一个 Web 应用或页面开始编写 CSS 的时候，都会先重置客户端（如浏览器）所提供的默认样式。那么，关键词 <code>revert</code> 就显得尤其的重要，因为它允许将 CSS 属性的值重置回浏览器特定的样式。例如，一个元素的 CSS 样式已经被大量修改，你想将其中的一部分或全部样式更改回浏览器默认样式，那么可以将属性值设置为 <code>revert</code> 。</p><p>我并不经常使用这个功能，因为我更喜欢删除所有浏览器样式，但在使用 <code>all: unset</code> 后，将一些样式更改回浏览器特定的样式可能会很有用。<code>revert</code> 关键字首先确定浏览器的 User-agent-stylesheet （浏览器加载的默认 CSS 文件）是否为特定的 HTML 元素创建特殊样式。如果是，则将重置为这些默认样式。例如：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* = block */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* = inline */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* = table */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>如果 User-agent-stylesheet （浏览器加载的默认 CSS 文件）中没有为该元素定义样式，则 <code>revert</code> 关键字的行为将类似于 <code>unset</code> 值。如果属性属于继承组，则将其重置为 <code>inherit</code> 值；否则，将其重置为 <code>initial</code>。</p><p>也就是说，<code>revert</code> 也区分了可继承属性和不可继承属性：</p><ul><li>如果一个属性通常是可继承的，<code>revert</code> 的含义就是继承</li><li>如果一个属性通常不可继承，<code>revert</code> 将还原为浏览器样式表中指定的值</li></ul><p>如果你想将应用程序中的每个元素，使其回到浏览器的默认样式，则可以选择使用 <code>all: revert</code> ，即：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>实际上，应用程序内的每个元素都像是从头开始一样！</p><h3 id="revert-vs-unset" tabindex="-1">revert vs. unset <a class="header-anchor" href="#revert-vs-unset" aria-label="Permalink to &quot;revert vs. unset&quot;">​</a></h3><p><code>revert</code> 和 <code>unset</code> 非常像，唯一的区别在于 <code>revert</code> 会把 CSS 属性值重置为 User-agent-stylesheet （浏览器加载的默认 CSS 文件）中对应的值，例如：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* unset */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* = initial = inline */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-weight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* = inherit = 其父元素的 font-weight 的值 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* = inherit = 其父元素的 font-size 的值  */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* revert */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* = block = User-agent-stylesheet */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-weight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* = bold = User-agent-stylesheet */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* = 2em = User-agent-stylesheet */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>总之，<code>unset</code> 和 <code>revert</code> 的主要区别在于 <code>revert</code> 考虑了用户定义和开发者编写的样式，而 <code>unset</code> 只考虑继承。因此，如果你想将属性重置为其继承（<code>inherit</code>）或初始（<code>initial</code>）值，并考虑用户定义或开发者编写的样式，请使用 <code>revert</code>。如果你只想将属性重置为其继承（<code>inherit</code>）或初始（<code>initial</code>）值，并且不需要考虑用户定义或开发者编写的样式，请使用 <code>unset</code>。</p><h2 id="initial-vs-inherit-vs-unset-vs-revert" tabindex="-1">initial VS. inherit VS. unset VS. revert <a class="header-anchor" href="#initial-vs-inherit-vs-unset-vs-revert" aria-label="Permalink to &quot;initial VS. inherit VS. unset VS. revert&quot;">​</a></h2><p>我们花了一些篇幅向大家阐述了 <code>initial</code> 、<code>inherit</code> 、<code>unset</code> 和 <code>revert</code> 几个关键词的作用和功能是什么以及何时使用哪个关键词。但我还是希望一个示例，向大家阐述它们之间的差异之处。比如，下面这个示例：</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Title&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> green</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>我们分别在 <code>div</code> 和 <code>h2</code> 元素上应用了一些简单的 CSS 样式。在浏览器中呈现的效果如下图所示：</p><p><img src="https://qn.huat.xyz/mac/202406050944900.awebp" alt="img"></p><blockquote><p>Demo 地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fcodepen.io%2Fairen%2Ffull%2FOJBZZwm" title="https://codepen.io/airen/full/OJBZZwm" target="_blank" rel="noreferrer">codepen.io/airen/full/…</a></p></blockquote><p>其中 <code>color</code> 是可继承属性，<code>border</code> 、<code>margin</code> 和 <code>padding</code> 是不可继承属性。例如，<code>div</code> 元素各属性的具体描述如下所示：</p><table><thead><tr><th><strong>属性名</strong></th><th><strong>初始值</strong></th><th><strong>是否可继承</strong></th><th><em><strong>User Agent Style（浏览器默认样式）</strong></em></th><th><strong>开发者编写样式</strong></th></tr></thead><tbody><tr><td><strong><code>color</code></strong></td><td>取决于用户代理</td><td>✔</td><td><code>black</code></td><td><code>red</code></td></tr><tr><td><strong><code>border-color</code></strong></td><td><code>currentColor</code></td><td>✘</td><td>No</td><td><code>green</code></td></tr><tr><td><strong><code>border-width</code></strong></td><td><code>medium</code></td><td>✘</td><td>No</td><td><code>5px</code></td></tr><tr><td><strong><code>border-style</code></strong></td><td>取决于计算值</td><td>✘</td><td>No</td><td><code>solid</code></td></tr><tr><td><strong><code>margin</code></strong></td><td><code>0</code></td><td>✘</td><td>No</td><td><code>10px</code></td></tr><tr><td><strong><code>padding</code></strong></td><td><code>0</code></td><td>✘</td><td>No</td><td><code>10px</code></td></tr></tbody></table><p><code>h2</code> 元素各属性具体描述如下所示：</p><table><thead><tr><th><strong>属性名</strong></th><th><strong>初始值</strong></th><th><strong>是否可继承</strong></th><th><em><strong>User Agent Style（浏览器默认样式）</strong></em></th><th><strong>开发者编写样式</strong></th></tr></thead><tbody><tr><td><strong><code>color</code></strong></td><td>取决于用户代理</td><td>✔</td><td><code>black</code></td><td><code>blue</code></td></tr><tr><td><strong><code>border-color</code></strong></td><td><code>currentColor</code></td><td>✘</td><td>No</td><td>No</td></tr><tr><td><strong><code>border-width</code></strong></td><td><code>medium</code></td><td>✘</td><td>No</td><td>No</td></tr><tr><td><strong><code>border-style</code></strong></td><td>取决于计算值</td><td>✘</td><td>No</td><td>No</td></tr><tr><td><strong><code>margin</code></strong></td><td><code>0</code></td><td>✘</td><td><em><code>0.83em 0px</code></em></td><td>No</td></tr><tr><td><strong><code>padding</code></strong></td><td><code>0</code></td><td>✘</td><td>No</td><td>No</td></tr></tbody></table><p>如果给 <code>h2</code> 元素添加下面这段代码：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inherit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inherit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inherit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inherit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><img src="https://qn.huat.xyz/mac/202406050944826.awebp" alt="img"></p><blockquote><p>Demo 地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fcodepen.io%2Fairen%2Ffull%2FYzJLvVQ" title="https://codepen.io/airen/full/YzJLvVQ" target="_blank" rel="noreferrer">codepen.io/airen/full/…</a></p></blockquote><p>很明显，<code>h2</code> 元素继承了其父元素 <code>div</code> 的 <code>color</code> 、<code>border</code> 、<code>margin</code> 和 <code>padding</code> 。即：</p><table><thead><tr><th><strong>属性名</strong></th><th><strong>开发者编写样式（值）</strong></th><th><strong>计算值</strong></th><th><strong>继承值来源</strong></th></tr></thead><tbody><tr><td><strong><code>color</code></strong></td><td><code>inherit</code></td><td><code>red</code></td><td>父元素 <code>div</code></td></tr><tr><td><strong><code>border-color</code></strong></td><td><code>inherit</code></td><td><code>green</code></td><td></td></tr><tr><td><strong><code>border-width</code></strong></td><td><code>inherit</code></td><td><code>5px</code></td><td></td></tr><tr><td><strong><code>border-style</code></strong></td><td><code>inherit</code></td><td><code>solid</code></td><td></td></tr><tr><td><strong><code>margin</code></strong></td><td><code>inherit</code></td><td><code>10px</code></td><td></td></tr><tr><td><strong><code>padding</code></strong></td><td><code>inherit</code></td><td><code>10px</code></td><td></td></tr></tbody></table><p>将上面代码中的 <code>inherit</code> 值替换为 <code>initial</code> ，即 <code>h2</code> 元素中的 <code>color</code> 、<code>border</code> 、<code>padding</code> 和 <code>margin</code> 都为初始值：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><img src="https://qn.huat.xyz/mac/202406050945141.awebp" alt="img"></p><blockquote><p>Demo 地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fcodepen.io%2Fairen%2Ffull%2FQWZrxQo" title="https://codepen.io/airen/full/QWZrxQo" target="_blank" rel="noreferrer">codepen.io/airen/full/…</a></p></blockquote><table><thead><tr><th><strong>属性名</strong></th><th><strong>初始值</strong></th><th><strong>开发者编写样式（值）</strong></th><th><strong>计算值</strong></th><th><strong>值来源</strong></th></tr></thead><tbody><tr><td><strong><code>color</code></strong></td><td><code>CanvasText</code></td><td><code>initial</code></td><td><code>black</code></td><td>初始值</td></tr><tr><td><strong><code>border-color</code></strong></td><td><code>currentColor</code></td><td><code>initial</code></td><td><code>currentColor</code></td><td>初始值</td></tr><tr><td><strong><code>border-width</code></strong></td><td><code>medium</code></td><td><code>initial</code></td><td><code>3px</code></td><td>初始值</td></tr><tr><td><strong><code>border-style</code></strong></td><td><code>none</code></td><td><code>initial</code></td><td><code>none</code></td><td>初始值</td></tr><tr><td><strong><code>margin</code></strong></td><td><code>0</code></td><td><code>initial</code></td><td><code>0</code></td><td>初始值</td></tr><tr><td><strong><code>padding</code></strong></td><td><code>0</code></td><td><code>initial</code></td><td><code>0</code></td><td>初始值</td></tr></tbody></table><blockquote><p>非常有意思的是，当 <code>border-width</code> 取值为 <code>initial</code> 时，Chrome 并没有根据 W3C 规范来定义，在 Chrome 中计算值为 <code>1.5px</code> ，但在 Safari 和 Firefox 浏览器中，<code>border-width</code> 取值为 <code>initial</code> 时，就是 <code>medium</code> ，其计算值为 <code>3px</code>。</p></blockquote><p>继续把 <code>h2</code> 中的 <code>color</code> 、<code>padding</code> 、<code>margin</code> 和 <code>border</code> 属性的值重置为 <code>unset</code> ：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>你将看到的效果如下：</p><p><img src="https://qn.huat.xyz/mac/202406050945379.awebp" alt="img"></p><blockquote><p>Demo 地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fcodepen.io%2Fairen%2Ffull%2FLYgmrgL" title="https://codepen.io/airen/full/LYgmrgL" target="_blank" rel="noreferrer">codepen.io/airen/full/…</a></p></blockquote><p>前面说过了，<code>unset</code> 会根据属性是否为可继承属性来做判断。如果属性是可继承属性，那么 <code>unset</code> 相当于 <code>inherit</code>，比如 <code>color</code> ，则 <code>h2</code> 的 <code>color</code> 会继承父元素 <code>div</code> 的 <code>color</code> 值；如果属性是不可继承属性，那么 <code>unset</code> 相当于 <code>initial</code> ，比如 <code>border</code> 、<code>padding</code> 和 <code>margin</code> 都是不可继承属性，所以 <code>h2</code> 上的 <code>border</code> 、<code>padding</code> 和 <code>margin</code> 都会取它们各自的初始值 <code>initial</code> ：</p><table><thead><tr><th><strong>属性名</strong></th><th><strong>初始值</strong></th><th><strong>是否可继承</strong></th><th><em><strong>User Agent Style（浏览器默认样式）</strong></em></th><th><strong>开发者编写样式</strong></th><th><strong>计算值</strong></th><th><strong>值来源</strong></th></tr></thead><tbody><tr><td><strong><code>color</code></strong></td><td><code>CanvasText</code></td><td>✔</td><td><code>black</code></td><td><code>unset</code></td><td><code>red</code></td><td>继承父元素 <code>div</code> 的 <code>color</code> 值</td></tr><tr><td><strong><code>border-color</code></strong></td><td><code>currentColor</code></td><td>✘</td><td>No</td><td><code>unset</code></td><td><code>currentColor</code></td><td>初始值</td></tr><tr><td><strong><code>border-width</code></strong></td><td><code>medium</code></td><td>✘</td><td>No</td><td><code>unset</code></td><td><code>medium</code></td><td>初始值</td></tr><tr><td><strong><code>border-style</code></strong></td><td><code>none</code></td><td>✘</td><td>No</td><td><code>unset</code></td><td><code>none</code></td><td>初始值</td></tr><tr><td><strong><code>margin</code></strong></td><td><code>0</code></td><td>✘</td><td><em><code>0.83em 0px</code></em></td><td><code>unset</code></td><td><code>0</code></td><td>初始值</td></tr><tr><td><strong><code>padding</code></strong></td><td><code>0</code></td><td>✘</td><td>No</td><td><code>unset</code></td><td><code>0</code></td><td>初始值</td></tr></tbody></table><p>最后再来看 <code>revert</code> 关键词，把 <code>h2</code> 中的 <code>color</code> 、<code>border</code> 、<code>margin</code> 和 <code>padding</code> 等属性的值设置为 <code>revert</code> ：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>此时看到的效果如下图所示：</p><p><img src="https://qn.huat.xyz/mac/202406050945941.awebp" alt="img"></p><blockquote><p>Demo 地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fcodepen.io%2Fairen%2Ffull%2FOJBZwVq" title="https://codepen.io/airen/full/OJBZwVq" target="_blank" rel="noreferrer">codepen.io/airen/full/…</a></p></blockquote><p><code>revert</code> 会将属性重置为其父级自然继承的值。在我们的例子中，它从父级 <code>div</code> 继承了 <code>color</code>。如果该属性不是可继承属性，则 <code>revert</code> 会将级联值回退到先前的级别。如果存在用户代理或用户默认样式，则将属性设置为默认值。在我们的例子中，它将 <code>h2</code> 的 <code>margin</code> 设置为其用户代理默认值 <code>0.83em</code>。如果没有默认样式，则将值设置为其初始值。这适用于我们示例中的边框属性。</p><table><thead><tr><th><strong>属性名</strong></th><th><strong>初始值</strong></th><th><strong>是否可继承</strong></th><th><em><strong>User Agent Style（浏览器默认样式）</strong></em></th><th><strong>开发者编写样式</strong></th><th><strong>计算值</strong></th><th><strong>值来源</strong></th></tr></thead><tbody><tr><td><strong><code>color</code></strong></td><td><code>CanvasText</code></td><td>✔</td><td><code>black</code></td><td><code>revert</code></td><td><code>red</code></td><td>继承父元素 <code>div</code> 的 <code>color</code> 值</td></tr><tr><td><strong><code>border-color</code></strong></td><td><code>currentColor</code></td><td>✘</td><td>No</td><td><code>revert</code></td><td><code>currentColor</code></td><td>初始值</td></tr><tr><td><strong><code>border-width</code></strong></td><td><code>medium</code></td><td>✘</td><td>No</td><td><code>revert</code></td><td><code>medium</code></td><td>初始值</td></tr><tr><td><strong><code>border-style</code></strong></td><td><code>none</code></td><td>✘</td><td>No</td><td><code>revert</code></td><td><code>none</code></td><td>初始值</td></tr><tr><td><strong><code>margin</code></strong></td><td><code>0</code></td><td>✘</td><td><em><code>0.83em 0px</code></em></td><td><code>revert</code></td><td><code>0</code><em><code>.83em 0px</code></em></td><td><em><strong>浏览器默认样式</strong></em></td></tr><tr><td><strong><code>padding</code></strong></td><td><code>0</code></td><td>✘</td><td>No</td><td><code>revert</code></td><td><code>0</code></td><td>初始值</td></tr></tbody></table><p>简而言之，<code>initial</code> 将值设置为属性的定义初始值，<code>inherit</code> 将值设置为父元素的值，<code>unset</code> 将属性值恢复到继承值或初始值，<code>revert</code> 将属性重置为父级自然继承的值。</p><h2 id="all-的作用是什么" tabindex="-1">all 的作用是什么？ <a class="header-anchor" href="#all-的作用是什么" aria-label="Permalink to &quot;all 的作用是什么？&quot;">​</a></h2><p>有时候我需要为网站的特定组件设计样式，但我需要重用已经以不同方式进行样式化的类名。当无法使用代码拆分时，这可能导致从其他源继承某些样式，我需要为我的组件覆盖这些样式。例如，假设我们有一个使用 Materialize 进行样式化的按钮，但我需要创建一个完全不同样式的按钮：</p><p><img src="https://qn.huat.xyz/mac/202406050946037.awebp" alt="img"></p><blockquote><p>Demo 地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fcodepen.io%2Fairen%2Ffull%2FoNaddvV" title="https://codepen.io/airen/full/oNaddvV" target="_blank" rel="noreferrer">codepen.io/airen/full/…</a></p></blockquote><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.unstyled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.unstyled:hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    transition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    cursor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    text-decoration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    text-align</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    letter-spacing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    outline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    line-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    text-transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    vertical-align</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    box-shadow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>Materialize 的按钮有许多样式，虽然最好的方法是使用不同的类来移除它们，但可能存在这样的情况，你没有这个选项，只能选择逐行调整每个属性或使用 <code>all</code> 属性。<code>all</code> 属性将允许你一次性重置多行：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.unstyled-all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.unstyled-all:hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>all</code> 属性将所有属性的值重置为给定的值。它目前接受四个值：<code>initial</code>、<code>inherit</code>、<code>revert</code> 和 <code>unset</code>。这些值也可以用作任何其他 CSS 属性的值，以将其重置为特定状态，但如果你确实需要重置所有内容，可以使用 <code>all</code>。</p><p>需要再次强调的是，<code>all</code> 可能不是从元素中删除样式的最佳方法。更有效的方法是更新你的选择器，使样式不会被覆盖或使用代码拆分。我只建议在受到应用样式方式和顺序限制时使用 <code>all</code>。</p><p>另外，需要注意的是，<code>all</code> 在 CSS 中有时候是一个属性，比如这里说的就是属性，但有的时候它还是 CSS 中某些属性的值。比如我们常在 <code>transition</code> 中用到的 <code>all</code>，那这个时候就是属性值。到目前为止，CSS 中的 <code>all</code> 属性也得到了众多浏览器的支持。</p><h2 id="综合案例-创建重置-css" tabindex="-1">综合案例：创建重置 CSS <a class="header-anchor" href="#综合案例-创建重置-css" aria-label="Permalink to &quot;综合案例：创建重置 CSS&quot;">​</a></h2><p>现在 CSS 有了这些新的重置功能，即 <code>initial</code> 、<code>inherit</code> 、<code>unset</code> 、<code>revert</code> 和 <code>all</code> ，使得我们创建一个重置 CSS 样式比以前简单得多。</p><p>在大部分情况下，我们希望将大多数属性重置为它们的默认初始值或 CSS 的内在行为，使用 <code>unset</code> 值。但正如我们上面所看到的，我们还想保留来自客户端（User-agent-stylesheet）的样式，比如 <code>display</code> 属性。那么我们就可以这样做：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 重置除了 \`display\` 属性之外的所有 User-Agent-Stylesheet 样式 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>看上去很完美，但还有一些细节需要处理。</p><p>当一些特殊的 HTML 元素（例如，<code>&lt;img&gt;</code> 、<code>&lt;video&gt;</code> 、<code>&lt;svg&gt;</code> 、<code>&lt;canvas&gt;</code> 和 <code>&lt;iframe&gt;</code> ）的 <code>width</code> 和 <code>height</code> 属性被 <code>all: unset</code> 重置时，这些元素上的 <code>width</code> 和 <code>height</code> 属性的效果也被重置。将会造成这些元素的大小属性不再起作用。</p><p>为了解决这个问题，你可以使用一些 CSS 伪类，比如前面课程《<a href="https://juejin.cn/book/7223230325122400288/section/7226251495276609569" title="https://juejin.cn/book/7223230325122400288/section/7226251495276609569" target="_blank" rel="noreferrer">CSS 选择器 :has() 和 :not() 的组合</a>》中提到的 <code>:not()</code> 伪类函数。即，将这些元素（比如，<code>img</code> 、<code>video</code> 、<code>svg</code> 、<code>canvas</code> 、<code>iframe</code> 等）当作 <code>:not()</code> 伪类函数的参数：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">video</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">svg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">canvas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">iframe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">svg</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>但是，使用 <code>:not()</code> 伪类函数会产生一个意想不到的后果，它会增加选择器权重，因此可能会覆盖项目中稍后定义的样式。例如：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">svg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">video</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">iframe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">canvas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">svg</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    min-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-family</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Exo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Bungee Shade&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cursive, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Arial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sans-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#557</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#fff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    place-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">clamp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vw</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p><img src="https://qn.huat.xyz/mac/202406050946778.awebp" alt="img"></p><blockquote><p>Demo 地址： <a href="https://link.juejin.cn/?target=https%3A%2F%2Fcodepen.io%2Fairen%2Ffull%2FBaqVoOB" title="https://codepen.io/airen/full/BaqVoOB" target="_blank" rel="noreferrer">codepen.io/airen/full/…</a></p></blockquote><p>其中 <code>*:not(img, svg, video, iframe, canvas):not(svg *)</code> 的权重是 <code>(0, 0, 2)</code> ，而 <code>body</code> 和 <code>div</code> 的权重是 <code>(0, 0, 1)</code> ：</p><p><img src="https://qn.huat.xyz/mac/202406050947373.awebp" alt="img"></p><p>这就是 <code>body</code> 和 <code>div</code> 选择器对应的样式没有起作用的原因。如果你不希望这种现象出现，可以使用 <a href="https://juejin.cn/book/7223230325122400288/section/7226251495069450278" title="https://juejin.cn/book/7223230325122400288/section/7226251495069450278" target="_blank" rel="noreferrer">CSS 的 :where() 伪类选择器</a>，将 <code>*:not(img, svg, video, firame, canvas):not(svg *)</code> 选择器权重除至最低，即 <code>(0 , 0, 0)</code> 。你可以像下面这样做：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">svg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">video</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">iframe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">canvas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">svg</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>如果你不想重置一些表单元素，则可以将其 <code>all</code> 属性设置为 <code>revert</code> 。比如 <a href="https://link.juejin.cn/?target=https%3A%2F%2Ftwitter.com%2Feladsc" title="https://twitter.com/eladsc" target="_blank" rel="noreferrer">@Elad Shechter</a> 的 《<a href="https://link.juejin.cn/?target=https%3A%2F%2Felad2412.github.io%2Fthe-new-css-reset%2F" title="https://elad2412.github.io/the-new-css-reset/" target="_blank" rel="noreferrer">The New CSS Reset</a>》就有这些关键词的使用：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">iframe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">canvas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">svg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">video</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">audio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">svg</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">symbol</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    cursor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">textarea</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    white-space</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -webkit-appearance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    appearance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pre</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::placeholder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::marker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dialog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:modal) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">revert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><blockquote><p>上面代码来源于：<a href="https://link.juejin.cn/?target=https%3A%2F%2Felad2412.github.io%2Fthe-new-css-reset%2F" title="https://elad2412.github.io/the-new-css-reset/" target="_blank" rel="noreferrer">elad2412.github.io/the-new-css…</a></p></blockquote><p>当然，你也可以采用更为激进的做法，将 <code>all</code> 属性的值设置为 <code>initial</code> 。其中差别是，<code>initial</code> 使用 CSS 规范上基于每个属性定义的初始值，而 <code>revert</code> 是用户代理样式表根据 CSS 选择器设置的默认值。例如，<code>display</code> 的初始值是 <code>inline</code> （即 <code>initial = inline</code>），而普通用户代理样式表将块元素（比如 <code>div</code>）的默认 <code>display</code> 值设置为 <code>block</code> ，将 <code>table</code> 元素的 <code>display</code> 值设置为 <code>table</code> ，等等。</p><h2 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h2><p>在 CSS 中，有一些全局关键字（ <code>initial</code>、<code>inherit</code>、<code>unset</code> 和 <code>revert</code>）可以用于设置属性的默认值或重置属性的值。虽然它们都可以用于任何属性，但它们之间存在一些重要的区别：</p><ul><li><strong><code>initial</code></strong> 会将属性设置为其初始值，即由浏览器定义的值。这个值通常在 CSS 规范中为该属性定义。</li><li><strong><code>inherit</code></strong> 将属性设置为其父元素的值。如果没有继承值，则将使用该属性的初始值。</li><li><strong><code>unset</code></strong> ，如果属性可以继承，则将属性设置为其继承值（等同于 <code>inherit</code>）。否则，将使用该属性的初始值（等同于 <code>initial</code> ）。这意味着 <code>unset</code> 允许继承，并且适用于将属性重置为其默认值，同时仍然允许从父元素继承。</li><li><strong><code>revert</code></strong> 与 <code>unset</code> 类似，如果属性可以继承，则将属性设置为其继承值。否则，将使用该属性的初始值。不同之处在于，<code>revert</code> 还考虑了任何用户定义的样式或作者样式表可能应用于元素。如果没有用户定义或作者样式，则 <code>revert</code> 的行为与 <code>unset</code> 相同。</li></ul><p><img src="https://qn.huat.xyz/mac/202406050948049.awebp" alt="img"></p><p>而 <code>all</code> 既可以是一个值，也可以是一个属性。只不过，我们这节课所探讨的 <code>all</code> 只是一个属性。或者更确切地说，是元素上所有 CSS 属性的集合。它的值可以是前面所讨论的关键字中的任何一个，并允许你将该关键字应用于所有 CSS 属性。</p><p>除此之外，在 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.w3.org%2FTR%2Fcss-cascade-5" title="https://www.w3.org/TR/css-cascade-5" target="_blank" rel="noreferrer">W3C 的 CSS Cascading and Inheritance Level 5 规范</a>中新增了一个 <code>revert-layer 关键词</code>。它可以让你回滚到之前的层级中指定的样式。理想情况下，<code>revert-layer</code> 关键词适用于在一个层级内部应用于属性。然而，如果将 <code>revert-layer</code> 关键词设置在一个层级外的属性上，那么该属性的值将回滚到用户代理样式表（或用户样式，如果存在）建立的默认值。因此，在这种情况下，<code>revert-layer</code> 关键词的行为类似于 <code>revert</code> 关键词。</p><p>这节课没有对 <code>revert-layer</code> 做过多阐述，我们将会在介绍 <code>@layer</code> 的时候，详细阐述该关键词的具体使用。</p><p>最后，再次强调一下，<code>initial</code> 、<code>inherit</code> 、<code>unset</code> 、<code>revert</code> 和 <code>all</code> 要是用好了的话，可以使你的代码更为简洁和灵活性更强，甚至起到事半功倍的效果。</p>`,198),l=[t];function p(h,d,k,r,c,o){return a(),i("div",null,l)}const y=s(e,[["render",p]]);export{g as __pageData,y as default};
