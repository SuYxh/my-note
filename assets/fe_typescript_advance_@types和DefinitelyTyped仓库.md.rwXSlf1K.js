import{_ as e,c as t,o as i,V as s}from"./chunks/framework.hxTji2_l.js";const _=JSON.parse('{"title":"@types 和 DefinitelyTyped 仓库","description":"","frontmatter":{},"headers":[],"relativePath":"fe/typescript/advance/@types和DefinitelyTyped仓库.md","filePath":"fe/typescript/advance/@types和DefinitelyTyped仓库.md","lastUpdated":1714972726000}'),a={name:"fe/typescript/advance/@types和DefinitelyTyped仓库.md"},p=s(`<h1 id="types-和-definitelytyped-仓库" tabindex="-1">@types 和 DefinitelyTyped 仓库 <a class="header-anchor" href="#types-和-definitelytyped-仓库" aria-label="Permalink to &quot;@types 和 DefinitelyTyped 仓库&quot;">​</a></h1><h2 id="definitelytyped-仓库" tabindex="-1">DefinitelyTyped 仓库 <a class="header-anchor" href="#definitelytyped-仓库" aria-label="Permalink to &quot;DefinitelyTyped 仓库&quot;">​</a></h2><p>DefinitelyTyped 是一个 高质量 的 TypeScript 类型定义的仓库。通过 @types 方式来安装常见的第三方 JavaScript 库的声明适配模块。</p><p>仓库的在线地址为：<a href="https://github.com/borisyankov/DefinitelyTyped" target="_blank" rel="noreferrer">https://github.com/borisyankov/DefinitelyTyped</a></p><p>那么这个仓库起到什么作用呢？在上一个小节中讲到，如果一个 JS 模块想要适配 TS 项目，那么需要有 d.ts 声明文件。那么如果这个 JS 模块没有提供声明文件的话，就可以通过 DefinitelyTyped 仓库下载第三方的声明文件来进行适配。</p><p>这个仓库会包含大部分常见 JS 库的声明文件，只需要下载就可以生效。下面我们举例，下载一个 jquery 库，并在 TS 项目引入 jquery。</p><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1_demo.ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;jquery  // error，提示缺少声明文</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>jquery 库并没有默认提供 d.ts 声明文件，所以导入模块的时候肯定是要报错的。鼠标移入到错误上，提示的信息就有让我们去安装对应的第三方声明文件，即：<code>npm i --save-dev @types/jquery</code></p><p>那么我们按照提示进行安装后，就会解决适配问题了，错误信息不再提示，并且 jquery 库的类型系统也会生效。</p><p>当然并不是所有的 JS 模块都需要下载第三方的@types，因为有些模块默认就会代码 d.ts 的声明文件，例如 moment 这个模块，安装好后，就会自带 moment.d.ts 文件。</p>`,10),n=[p];function r(d,l,y,o,c,h){return i(),t("div",null,n)}const k=e(a,[["render",r]]);export{_ as __pageData,k as default};
